<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>心梦</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-13T14:01:45.109Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>心梦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>极世界总结</title>
    <link href="http://example.com/2023/03/09/%E6%9E%81%E4%B8%96%E7%95%8C%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2023/03/09/%E6%9E%81%E4%B8%96%E7%95%8C%E6%80%BB%E7%BB%93/</id>
    <published>2023-03-09T04:43:52.000Z</published>
    <updated>2023-03-13T14:01:45.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据库使用EF  EntityFrameworkCore</span><br><span class="line">json使用JsonDotNet</span><br><span class="line">协议使用protobuf</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="EF数据库EntityFrameworkCore"><a href="#EF数据库EntityFrameworkCore" class="headerlink" title="EF数据库EntityFrameworkCore"></a><code>EF</code>数据库<code>EntityFrameworkCore</code></h1><p><a href="https://blog.csdn.net/qq_43024228/article/details/108568621">(12条消息) EntityFrameworkCore生成数据库方法_entity生成数据库_Danny_hi的博客-CSDN博客</a></p><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><p>使用<code>protobuf</code> 协议 使用Socket编程</p><p>进行了粘包处理 </p><p>消息分发器</p><p><img src="/../images/image-20230309164609843.png" alt="image-20230309164609843"></p><p>服务器分发线程池多线程服务器的分发</p><h1 id="用户系统"><a href="#用户系统" class="headerlink" title="用户系统"></a>用户系统</h1><p><img src="/../images/image-20230309173927503.png" alt="image-20230309173927503"></p><h2 id="过程："><a href="#过程：" class="headerlink" title="过程："></a>过程：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">从 UI 读取出注册/登录信息，由 UserService 进行信息发送，由于用户登录为第一次向服务器发送信息，并且向服务端的连接是异步的，所以需要判断是否已经连接，如果没有连接先进行连接在进行信息发送.</span><br><span class="line"></span><br><span class="line">当服务器收到信息时，进行信息校验。</span><br><span class="line"></span><br><span class="line">登录判断用户名密码是否正确，判断玩家是否已经登录，如正确则初始化玩家信息，并将玩家信息返回给客户端；</span><br><span class="line"></span><br><span class="line">注册则判断该用户名是否已经注册，校验完成则初始化玩家信息，并将玩家信息读入数据库；</span><br><span class="line"></span><br><span class="line">注册时客户端向服务端发送密码信息之前可以进行一次加密，保证信息安全</span><br></pre></td></tr></table></figure><h1 id="角色选择"><a href="#角色选择" class="headerlink" title="角色选择"></a>角色选择</h1><p>角色创建流程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">角色创建</span><br><span class="line"></span><br><span class="line">选择要创建的角色类型，输入角色名，向服务端发送信息进行创建，服务端进行校验，校验成功将新创建的角色信息读入数据库中，并返回新的当前User的角色列表，客户端接受到新的角色列表后进行角色列表的更新</span><br></pre></td></tr></table></figure><h2 id="Render-Texture"><a href="#Render-Texture" class="headerlink" title="Render Texture"></a>Render Texture</h2><p>创建Render Texture。</p><p><img src="/../images/image-20230309193730446.png" alt="image-20230309193730446"></p><p>Render Texture赋值给顶视角摄像机的Target Texture。</p><p><img src="/../images/image-20230309193806915.png" alt="image-20230309193806915"></p><p>3、使用Raw Image显示<br>创建一个RawImage</p><p>将RenderTexture赋值给RawImage的Texture属性</p><p><img src="/../images/image-20230309193822003.png" alt="image-20230309193822003">原文链接：<a href="https://blog.csdn.net/linxinfa/article/details/108865127">https://blog.csdn.net/linxinfa/article/details/108865127</a></p><h2 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h2><p><img src="/../images/image-20230309214508125.png" alt="image-20230309214508125"></p><p>通过配置获取Port</p><p><img src="/../images/image-20230309214534406.png" alt="image-20230309214534406"></p><p><img src="/../images/image-20230309214610229.png" alt="image-20230309214610229"></p><h1 id="进入主城"><a href="#进入主城" class="headerlink" title="进入主城"></a>进入主城</h1><h2 id="进入主城流程"><a href="#进入主城流程" class="headerlink" title="进入主城流程"></a>进入主城流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">选择角色进入主城时，传入的角色Id为当前玩家角色列表的Id，因为服务器中存了与只对应的列表，可以确定哪个角色进入地图，服务端 Mapserver 传递给地图将玩家进入信息传递给当前地图中的所有玩家</span><br><span class="line"></span><br><span class="line">角色进入信息传递到客户端MapServer中，判断是否为当前角色，是的话更新当前地图Id，将角色添加到CharacterManager中，添加到字典，并通过GameObjectManager创建角色实体，判断角色是否为当前角色，来确定是否添加CharacterInputControler 和 CameraControl </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在客户端和服务端之间使用自定义vector进行传输，可以在一定程度上减少浮点数运算产生的误差</span><br><span class="line"></span><br><span class="line">Character继承自Entity实体，Entity负责位置 速度 NEntity 数据用于信息传递</span><br><span class="line">Character设置 name NCharacterInfo</span><br><span class="line">EntityControler 控制角色实体的状态更新</span><br><span class="line"></span><br><span class="line">左上角角色信息更新：当User当前角色更新时，更新左上角角色信息</span><br><span class="line"></span><br><span class="line">角色血条：创建世界空间的UI</span><br></pre></td></tr></table></figure><h2 id="离开游戏流程"><a href="#离开游戏流程" class="headerlink" title="离开游戏流程"></a>离开游戏流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">向服务端发送角色离开信息，服务端在CharacterManager去除角色，MapManager去除角色，并通知角色所在地图中的所有玩家角色离开的信息，发送到客户端；客户端接收到信息，判断是否为当前角色，不为当前角色，将离开的角色在CharacterManager中删除，并删除角色实体，否则删除所有角色，并返回选择角色界面</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230310104415170.png" alt="image-20230310104415170"></p><h2 id="对象关系"><a href="#对象关系" class="headerlink" title="对象关系"></a>对象关系</h2><p>Entity ： 位置方向速度 NEntity 用于信息传递</p><p>CharacterBase ： characterDefine 存放配置表中的信息， NCharacterInfo用于信息传递，角色类型</p><p>Character： DCharacter 存放数据库中的信息  和当前角色的背包信息，队伍信息等</p><p><img src="/../images/image-20230309215104920.png" alt="image-20230309215104920"></p><p><img src="/../images/image-20230309215304550.png" alt="image-20230309215304550"></p><h2 id="this索引器"><a href="#this索引器" class="headerlink" title="this索引器"></a>this索引器</h2><p>MapManager   This索引器</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> <span class="keyword">this</span>[<span class="built_in">int</span> index]</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">get</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">set</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230310094618412.png" alt="image-20230310094618412"></p><h2 id="血条面向摄像机"><a href="#血条面向摄像机" class="headerlink" title="血条面向摄像机"></a>血条面向摄像机</h2><p>lookAt</p><p><img src="/../images/image-20230310124801702.png" alt="image-20230310124801702"></p><p>forword</p><p><img src="/../images/image-20230310125242134.png" alt="image-20230310125242134"></p><h1 id="小地图"><a href="#小地图" class="headerlink" title="小地图"></a>小地图</h1><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入一个新地图时，更新User中的CurrentMap，当角色创建时，更新MinMapManager中的玩家实体，当进入新的场景的时候，更新地图的包围盒，并更新当前的地图图片；当玩家移动时，计算出玩家的位置，将玩家的位置设为小地图图片的中心位置，当玩家转动时，更新小地图上的指针方向为玩家的朝向</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更新朝向</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.arrow.transform.eulerAngles = <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, -playerTransform.eulerAngles.y);</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230310162913414.png" alt="image-20230310162913414"></p><p><img src="/../images/image-20230310154623187.png" alt="image-20230310154623187"></p><h2 id="地图制作方案"><a href="#地图制作方案" class="headerlink" title="地图制作方案"></a>地图制作方案</h2><p><img src="/../images/image-20230310154733951.png" alt="image-20230310154733951"></p><h1 id="移动同步"><a href="#移动同步" class="headerlink" title="移动同步"></a>移动同步</h1><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用Entity进行角色的状态同步，CharacterInputController接受玩家输入发生Entity状态改变 ，向服务端发送EntitySync信息，服务端接受后传到MapServer中玩家对应Map对Entity进行更新，并发送消息给地图中的其他玩家，其他玩家客户端收到同步信息后，在EntityManager中找到对应EntityController同步Entity信息，并更新角色实体的状态</span><br></pre></td></tr></table></figure><p>定义NEntiy和同步事件</p><p><img src="/../images/image-20230310203937011.png" alt="image-20230310203937011"></p><p><img src="/../images/image-20230310204013376.png" alt="image-20230310204013376"></p><p>同步请求和响应</p><p><img src="/../images/image-20230310204123047.png" alt="image-20230310204123047"></p><p><img src="/../images/image-20230310175947702.png" alt="image-20230310175947702"></p><p><img src="/../images/image-20230310184912202.png" alt="image-20230310184912202"></p><p>同步的变量</p><p><img src="/../images/image-20230310171652229.png" alt="image-20230310171652229"></p><h2 id="状态同步和帧同步"><a href="#状态同步和帧同步" class="headerlink" title="状态同步和帧同步"></a>状态同步和帧同步</h2><p><img src="/../images/image-20230310170736984.png" alt="image-20230310170736984"></p><h1 id="地图传送"><a href="#地图传送" class="headerlink" title="地图传送"></a>地图传送</h1><h1 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在配置表中配置传送点，传送点Id和传入的地方，在地图中设置传送Object，通过编译器拓展方法像配置表中读入传送点的位置和朝向信息，用于设置玩家传入地图时的位置和朝向，使用触发器进行触发，，当有物体进行触发时，判断对象身上是否带有Charactercontroller，当带有是说明对象为当前玩家，向服务端发送地图传送信息，服务端进行校验：传送点是否存在，传送到地点是否存在等，然后再MapManager中退出现在所在地图，设置玩家位置为传送点配置中的位置和宣战后加入传送到的地图，并通知地图中的其他玩家完成地图传送，并更新小地图资源</span><br></pre></td></tr></table></figure><h2 id="画模型边界"><a href="#画模型边界" class="headerlink" title="画模型边界"></a>画模型边界</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.blue;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.mesh!=<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Gizmos.DrawWireMesh(<span class="keyword">this</span>.mesh, </span><br><span class="line">                <span class="keyword">this</span>.transform.position + Vector3.up * <span class="keyword">this</span>.transform.localPosition.y * <span class="number">.5</span>f, </span><br><span class="line">                <span class="keyword">this</span>.transform.rotation, <span class="keyword">this</span>.transform.localScale);</span><br><span class="line">        &#125;</span><br><span class="line">        UnityEditor.Handles.color = Color.red;</span><br><span class="line">        UnityEditor.Handles.ArrowHandleCap(<span class="number">0</span>, <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation, <span class="number">1f</span>, EventType.Repaint);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="导出传送点"><a href="#导出传送点" class="headerlink" title="导出传送点"></a>导出传送点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">MenuItem(<span class="string">&quot;Map Tools/Export Teleporters&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ExportTeleporters</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        DataManager.Instance.Load();</span><br><span class="line"></span><br><span class="line">        Scene scene = EditorSceneManager.GetActiveScene();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> currentScene = scene.name;</span><br><span class="line">        <span class="keyword">if</span>(scene.isDirty)</span><br><span class="line">        &#123;</span><br><span class="line">            EditorUtility.DisplayDialog(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;请先保存当前场景&quot;</span>, <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;TeleportObject&gt; allteleportObjects = <span class="keyword">new</span> List&lt;TeleportObject&gt;();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">var</span> map <span class="keyword">in</span> DataManager.Instance.Maps)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取地图所在位置</span></span><br><span class="line">            <span class="built_in">string</span> sceneFile = <span class="string">&quot;Assets/Scenes/&quot;</span> + map.Value.Resource + <span class="string">&quot;.unity&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!System.IO.File.Exists(sceneFile))</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogErrorFormat(<span class="string">&quot;Scene :&#123;0&#125; not existed!&quot;</span>, sceneFile);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            EditorSceneManager.OpenScene(sceneFile, OpenSceneMode.Single);</span><br><span class="line"></span><br><span class="line">            TeleportObject[] teleports = FindObjectsOfType&lt;TeleportObject&gt;();</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">var</span> teleporter <span class="keyword">in</span> teleports)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(!DataManager.Instance.Teleporters.ContainsKey(teleporter.ID))</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorUtility.DisplayDialog(<span class="string">&quot;错误&quot;</span>,</span><br><span class="line">                        <span class="built_in">string</span>.Format(<span class="string">&quot;地图：&#123;0&#125;中配置的 TeleportID：&#123;1&#125;不存在！&quot;</span>, map.Value.ID, teleporter.ID),</span><br><span class="line">                        <span class="string">&quot; 确定&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                TeleporterDefine teleporter_Define = DataManager.Instance.Teleporters[teleporter.ID];</span><br><span class="line">                <span class="keyword">if</span>(teleporter_Define.MapID!=map.Value.ID)</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorUtility.DisplayDialog(<span class="string">&quot;错误&quot;</span>,</span><br><span class="line">                        <span class="built_in">string</span>.Format(<span class="string">&quot;地图：&#123;0&#125;中不应存在的 TeleportID：&#123;1&#125;！&quot;</span>, map.Value.ID, teleporter.ID),</span><br><span class="line">                          <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                teleporter_Define.Position = GameObjectTool.WorldToLogicN(teleporter.transform.position);</span><br><span class="line">                teleporter_Define.Direction = GameObjectTool.WorldToLogicN(teleporter.transform.forward);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DataManager.Instance.SaveTeleporters();</span><br><span class="line">        EditorSceneManager.OpenScene(<span class="string">&quot;Assets/Scenes/&quot;</span> + currentScene + <span class="string">&quot;.unity&quot;</span>);</span><br><span class="line">        EditorUtility.DisplayDialog(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;传送点导出完毕&quot;</span>, <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>保存json</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveTeleporters</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> json = JsonConvert.SerializeObject(<span class="keyword">this</span>.Teleporters, Formatting.Indented);</span><br><span class="line">        File.WriteAllText(<span class="keyword">this</span>.DataPath + <span class="string">&quot;TeleporterDefine.txt&quot;</span>, json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveSpawnPoints</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> json = JsonConvert.SerializeObject(<span class="keyword">this</span>.SpawnPoints, Formatting.Indented);</span><br><span class="line">        File.WriteAllText(<span class="keyword">this</span>.DataPath + <span class="string">&quot;SpawnPointDefine.txt&quot;</span>, json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230311155530000.png" alt="image-20230311155530000"></p><h1 id="UI框架"><a href="#UI框架" class="headerlink" title="UI框架"></a>UI框架</h1><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UI先在UIMain中进行UI注册，包括UI所需要的资源，是否为全局变量等，UIMain提供注册和关闭函数；</span><br><span class="line">所有的UI继承自UIWindow，UIWindow提供关闭带有关闭类型的关闭函数，和关闭事件</span><br></pre></td></tr></table></figure><p>UIManager</p><figure class="highlight cc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> Assets.Scripts.UI.Set;</span><br><span class="line"><span class="keyword">using</span> Assets.Scripts.UI.UIQuest;</span><br><span class="line"><span class="keyword">using</span> Models;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UIManager</span> : Singleton&lt;UIManager&gt;&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UIElement</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//资源所在地</span></span><br><span class="line">        <span class="keyword">public</span> string Resources;</span><br><span class="line">        <span class="comment">//是否全局</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">bool</span> Cache;</span><br><span class="line">        <span class="comment">//对象实例</span></span><br><span class="line">        <span class="keyword">public</span> GameObject Instance;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">bool</span> is_shop;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> UIcnt;</span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;Type, UIElement&gt; UIResources = <span class="keyword">new</span> <span class="built_in">Dictionary</span>&lt;Type, UIElement&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UIManager</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.UIResources.<span class="built_in">Add</span>(<span class="built_in">typeof</span>(UITest), <span class="keyword">new</span> <span class="built_in">UIElement</span>() &#123; Resources = <span class="string">&quot;UI/UITest&quot;</span>, Cache = <span class="literal">true</span>, is_shop=<span class="literal">true</span>&#125;);</span><br><span class="line">        User.Instance.CurrentCharacter_Set_Action += () =&gt;</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">this</span>.UIcnt = <span class="number">0</span>;</span><br><span class="line">          &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> T <span class="built_in">Show</span>&lt;T&gt;()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//SoundManager.Instance.PlaySound(&quot;ui_open&quot;);</span></span><br><span class="line">        Type type = <span class="built_in">typeof</span>(T);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.UIResources.<span class="built_in">ContainsKey</span>(type))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (UIResources[type].is_shop)</span><br><span class="line">                UIcnt++;</span><br><span class="line">            UIElement info = <span class="keyword">this</span>.UIResources[type];</span><br><span class="line">            <span class="keyword">if</span>(info.Instance!=null)</span><br><span class="line">            &#123;</span><br><span class="line">                info.Instance.<span class="built_in">SetActive</span>(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                UnityEngine.Object prefab = Resources.<span class="built_in">Load</span>(info.Resources);</span><br><span class="line">                <span class="keyword">if</span>(prefab==null)</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.<span class="built_in">LogErrorFormat</span>(<span class="string">&quot;UIManager-&gt;Show&lt;T&gt; Type:&#123;0&#125; Resources:&#123;1&#125; not exist&quot;</span>, type.Name,info.Resources);</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">default</span>(T);</span><br><span class="line">                &#125;</span><br><span class="line">                info.Instance = (GameObject)GameObject.<span class="built_in">Instantiate</span>(prefab);</span><br><span class="line">            &#125;</span><br><span class="line">            SoundManager.Instance.<span class="built_in">PlayerSound</span>(SoundDefine.UI_Win_Open);</span><br><span class="line">            <span class="keyword">return</span> info.Instance.<span class="built_in">GetComponent</span>&lt;T&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        Debug.<span class="built_in">LogErrorFormat</span>(<span class="string">&quot;UIManager-&gt;Show&lt;T&gt; Type:&#123;0&#125; not exist&quot;</span>, type.Name);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">default</span>(T);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">void</span> <span class="title">Close</span><span class="params">(Type type)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (UIResources[type].is_shop)</span><br><span class="line">            UIcnt--;</span><br><span class="line">        <span class="comment">//SoundManager.Instance.PlaySound(&quot;ui_close&quot;);</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.UIResources.<span class="built_in">ContainsKey</span>(type))</span><br><span class="line">        &#123;</span><br><span class="line">            SoundManager.Instance.<span class="built_in">PlayerSound</span>(SoundDefine.UI_Win_Close);</span><br><span class="line">            UIElement info = <span class="keyword">this</span>.UIResources[type];</span><br><span class="line">            <span class="keyword">if</span>(info.Cache)</span><br><span class="line">            &#123;</span><br><span class="line">                info.Instance.<span class="built_in">SetActive</span>(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                GameObject.<span class="built_in">Destroy</span>(info.Instance);</span><br><span class="line">                info.Instance = null;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UIWindow</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Assets.Scripts.Managers;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">UIWindow</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">CloseHandler</span>(<span class="params">UIWindow sender, WindowResult result</span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> CloseHandler Onclose;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根节点</span></span><br><span class="line">    [<span class="meta">HideInInspector</span>]</span><br><span class="line">    <span class="keyword">public</span> GameObject Root;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">virtual</span> System.Type Type &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.GetType()</span><br><span class="line">; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">enum</span> WindowResult</span><br><span class="line">    &#123;</span><br><span class="line">        None,Yes,No</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Close</span> (<span class="params">WindowResult result= WindowResult.None</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        UIManager.Instance.Close(<span class="keyword">this</span>.Type);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.Onclose != <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">this</span>.Onclose(<span class="keyword">this</span>,result);</span><br><span class="line">        <span class="keyword">this</span>.Onclose = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnClick_Close</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnClick_Yes</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Close(WindowResult.Yes);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnClick_No</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Close(WindowResult.No);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InDisable();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">InDisable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UI分类"><a href="#UI分类" class="headerlink" title="UI分类"></a>UI分类</h2><p><img src="/../images/image-20230311165630218.png" alt="image-20230311165630218"></p><p><img src="/../images/image-20230311165758292.png" alt="image-20230311165758292"></p><h2 id="粒子特效"><a href="#粒子特效" class="headerlink" title="粒子特效"></a>粒子特效</h2><p><img src="/../images/image-20230311172807240.png" alt="image-20230311172807240"></p><p>特效类型不应该为UI</p><p><img src="/../images/image-20230311172906272.png" alt="image-20230311172906272"></p><h1 id="Npc系统"><a href="#Npc系统" class="headerlink" title="Npc系统"></a>Npc系统</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置表：Npc配置Npc类型，功能和参数</span><br><span class="line">Npc分类：分为任务型Npc和功能型Npc，再NpcManager中设置事件字典，用于其他模块注册功能型Npc的功能</span><br><span class="line">启动Npc：再Npc身上添加碰撞器，使用回调 OnMouseDown() 等</span><br><span class="line">当玩家点击时，先让Npc面向玩家，然后转到NPcManager调用对用Npc的功能</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnMouseDown</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span> (!MouseManager.Instance.Mouse_Is_Display) <span class="keyword">return</span>;</span><br><span class="line">      Interactive();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnMouseOver</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      Highlight(<span class="literal">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnMouseEnter</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      Highlight(<span class="literal">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnMouseExit</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      Highlight(<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230311185440220.png" alt="image-20230311185440220"></p><p>Npc配置表</p><p><img src="/../images/image-20230311190121581.png" alt="image-20230311190121581"></p><h1 id="道具系统"><a href="#道具系统" class="headerlink" title="道具系统"></a>道具系统</h1><h2 id="流程-2"><a href="#流程-2" class="headerlink" title="流程"></a>流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置表：需要类型类别，出售价格，功能和一些参数</span><br><span class="line">数据库方面：建立玩家-道具表，为一对多关系</span><br><span class="line">每当角色进入游戏时，将对应角色的道具信息再服务端进行初始化返回客户端进行初始化</span><br><span class="line">客户端通过IteamManager管理所有道具，ItemManager存储实体Item，当道具增加，减少使用时，对背包进行更新，向服务端发送信息，交由服务端对应玩家的ItemManager进行处理，并更新数据库</span><br></pre></td></tr></table></figure><p>配置表</p><p><img src="/../images/image-20230311205905929.png" alt="image-20230311205905929"></p><p><img src="/../images/image-20230311205202000.png" alt="image-20230311205202000"></p><p><img src="/../images/image-20230311205214351.png" alt="image-20230311205214351"></p><p><img src="/../images/image-20230311205444873.png" alt="image-20230311205444873"></p><h1 id="背包系统"><a href="#背包系统" class="headerlink" title="背包系统"></a>背包系统</h1><h2 id="设计流程"><a href="#设计流程" class="headerlink" title="设计流程"></a>设计流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据库：数据库建立背包表，背包和玩家的关系为一对一，背包表中存储背包信息为Binary（二进制）类型</span><br><span class="line">背包的数据结结构：DB中存储二进制文件，背包物体的数据结构为结构体，方便对背包中的物体进行交换，也方便解析二进制文件</span><br><span class="line">玩家进行注册时初始化数据库中的玩家背包表</span><br><span class="line">当玩家登录时，将数据库中的数据读入服务端玩家中，传回客户端，客户端判断背包是否为空，为空则根据玩家物品重新配置背包，否则根据数据库数据进行读取背包，分析获取背包和读取背包都使用在unsafe下运行的指针操作进行</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> 分析获取背包</span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;data&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">   <span class="function"><span class="keyword">unsafe</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Analyze</span>(<span class="params"><span class="built_in">byte</span>[] data</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">fixed</span> (<span class="built_in">byte</span>* pt = data)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.Unlocked;i++)</span><br><span class="line">           &#123;</span><br><span class="line">               BagItem* item = (BagItem*)(pt + (i * <span class="keyword">sizeof</span>(BagItem)));</span><br><span class="line">               <span class="keyword">this</span>.items[i] = *item;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取背包信息</span></span><br><span class="line">   <span class="function"><span class="keyword">unsafe</span> <span class="keyword">public</span> NBagInfo <span class="title">GetBagInfo</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">//Debug.LogError(&quot;BagManager-&gt;NBagInfo&quot;);</span></span><br><span class="line">       <span class="keyword">fixed</span> (<span class="built_in">byte</span>* pt = info.Items)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.Unlocked; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               BagItem* item = (BagItem*)(pt + (i * <span class="keyword">sizeof</span>(BagItem)));</span><br><span class="line">               *item = items[i];</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.info;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="TabView-TabButton"><a href="#TabView-TabButton" class="headerlink" title="TabView  TabButton"></a>TabView  TabButton</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Assets.Scripts.UI.Set;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TabButton</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Sprite activeImage;</span><br><span class="line">    <span class="keyword">private</span> Sprite normalImage;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HideInInspector</span>]</span><br><span class="line">    <span class="keyword">public</span> TabView tabView;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HideInInspector</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> tabIndex = <span class="number">0</span>;</span><br><span class="line">    [<span class="meta">HideInInspector</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> selected = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Image tabImage;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> ()</span> &#123;</span><br><span class="line">        tabImage = <span class="keyword">this</span>.GetComponent&lt;Image&gt;();</span><br><span class="line">        normalImage = tabImage.sprite;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.GetComponent&lt;Button&gt;().onClick.AddListener(OnClick);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Select</span>(<span class="params"><span class="built_in">bool</span> <span class="keyword">select</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tabImage.overrideSprite = <span class="keyword">select</span> ? activeImage : normalImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnClick</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SoundManager.Instance.PlayerSound(SoundDefine.UI_Click);</span><br><span class="line">        <span class="keyword">this</span>.tabView.SelectTab(<span class="keyword">this</span>.tabIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Assets.Scripts.UI.Set;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Events;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TabView</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TabButton[] tabButtons;</span><br><span class="line">    <span class="keyword">public</span> GameObject[] tabPages;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UnityAction&lt;<span class="built_in">int</span>&gt; OnTabSelect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> index = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">// Use this for initialization</span></span><br><span class="line">    <span class="function">IEnumerator <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; tabButtons.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tabButtons[i].tabView = <span class="keyword">this</span>;</span><br><span class="line">            tabButtons[i].tabIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForEndOfFrame</span>()</span>;</span><br><span class="line">        SelectTab(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> selected_Idx = <span class="number">-1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SelectTab</span>(<span class="params"><span class="built_in">int</span> index, <span class="built_in">bool</span> action = <span class="literal">true</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.index != index)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            selected_Idx = index;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; tabButtons.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                tabButtons[i].Select(i == index);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.tabPages.Length == <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">this</span>.tabPages[<span class="number">0</span>].SetActive(<span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">if</span> (i &lt; tabPages.Length)</span><br><span class="line">                    tabPages[i].SetActive(i == index);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (action)</span><br><span class="line">                <span class="keyword">if</span> (OnTabSelect != <span class="literal">null</span>)</span><br><span class="line">                    OnTabSelect(index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230313094940506.png" alt="image-20230313094940506"></p><h1 id="商店系统"><a href="#商店系统" class="headerlink" title="商店系统"></a>商店系统</h1><h2 id="设计流程-1"><a href="#设计流程-1" class="headerlink" title="设计流程"></a>设计流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置表：商店表，商店道具表</span><br><span class="line">UI实现点击：添加组件Selected，脚本继承 ISelectHandler 实现  public void OnSelect(BaseEventData eventData)</span><br><span class="line"></span><br><span class="line">通过NPC系统调用商店，在npc系统上注册事件，当点击对应Npc时展示通过Npc的参数，读取对应商店信息，展示商店UI，点击购买向服务端发送物品购买信息，服务端进行校验，id和价格是否正确，金币是否足够等，如购买成功在IteamManager上进行添加物品，并同步状态同步信息返回；</span><br><span class="line">状态同步：状态行为（增加删除还是更新），更新状态的类型，更新的id和值</span><br><span class="line">每当发送信息时，判断状态同步信息是否为空，不为空则一并发送</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230312203326499.png" alt="image-20230312203326499"></p><p>状态同步</p><p><img src="/../images/image-20230312214154467.png" alt="image-20230312214154467"></p><p><img src="/../images/image-20230312201736476.png" alt="image-20230312201736476"></p><p><img src="/../images/image-20230312202532473.png" alt="image-20230312202532473"></p><p><img src="/../images/image-20230312202635646.png" alt="image-20230312202635646"></p><h1 id="装备系统"><a href="#装备系统" class="headerlink" title="装备系统"></a>装备系统</h1><h2 id="设计流程-2"><a href="#设计流程-2" class="headerlink" title="设计流程"></a>设计流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">配置：配置表 ：在物品表中添加装备，物品类型为装备，并添加装备表来存储装备的具体信息</span><br><span class="line">数据库中使用二进制文件来存储装备信息</span><br><span class="line">玩家创建时初始化数据库中的装备信息，玩家进入时服务端传入装备信息，客户端接收后在EquipManager中初始化装备信息，当打开装备UI时，根据EquipManager中的装备信息进行初始化，当发出穿戴/脱下请求，并记录下穿/脱和对哪件装备进行的操作；服务端进行一系列校验，装备是否存在等，校验成功返回成功并更新玩家数据库中的装备信息，返回客户端客户端根据提前记录的数据和服务器返回的结果进行操作</span><br><span class="line"></span><br><span class="line">UI的点击使用IPointerClickHandler</span><br><span class="line"> public void O nPointerClick(PointerEventData eventData)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 根据装备数据更新装备</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;data&quot;&gt;</span>装备数据<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">unsafe</span> <span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ParseEquipData</span>(<span class="params"><span class="built_in">byte</span>[] data</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">fixed</span>(<span class="built_in">byte</span>* pt =<span class="keyword">this</span>.Data)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.Equips.Length;i++)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="built_in">int</span> itemId = *(<span class="built_in">int</span>*)(pt + (i * <span class="keyword">sizeof</span>(<span class="built_in">int</span>)));</span><br><span class="line">             <span class="keyword">if</span> (itemId &gt; <span class="number">0</span>)</span><br><span class="line">                 <span class="keyword">this</span>.Equips[i] = ItemManager.Instance.Items[itemId];</span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">this</span>.Equips[i] = <span class="literal">null</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 获取装备数据</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">unsafe</span> <span class="keyword">public</span> <span class="built_in">byte</span>[] <span class="title">GetEquipData</span>()</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">fixed</span> (<span class="built_in">byte</span>* pt = Data)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; (<span class="built_in">int</span>)EquipSlot.SlotMax; i++)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="built_in">int</span>* itemId = (<span class="built_in">int</span>*)(pt + i * <span class="keyword">sizeof</span>(<span class="built_in">int</span>));</span><br><span class="line">             <span class="keyword">if</span> (<span class="keyword">this</span>.Equips[i] == <span class="literal">null</span>)</span><br><span class="line">                 *itemId = <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">else</span> *itemId = <span class="keyword">this</span>.Equips[i].id;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">this</span>.Data;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230313115022480.png" alt="image-20230313115022480"></p><p>协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">装备为道具的一种类型，并定义装备的位置</span><br><span class="line">客户端与服务端通信使用槽位+Id加 穿还是脱</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230313115133549.png" alt="image-20230313115133549"></p><p><img src="/../images/image-20230313115744519.png" alt="image-20230313115744519"></p><h1 id="任务系统"><a href="#任务系统" class="headerlink" title="任务系统"></a>任务系统</h1><h2 id="设计流程-3"><a href="#设计流程-3" class="headerlink" title="设计流程"></a>设计流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">任务的分类：分为主线任务，直线任务等；每种任务又分为 对话任务，杀怪任务，送信任务等</span><br><span class="line"></span><br><span class="line">数据库表：需要任务ID 目标 和 当前状态</span><br><span class="line"></span><br><span class="line">配置表：任务需要任务Id，任务名，任务类型，等级限制，职业限制，任务领取NPC，任务提交NPC，任务描述，任务对话，任务目标，任务奖励等</span><br><span class="line"></span><br><span class="line">Quest Modle：存储Define信息和NQuest信息</span><br><span class="line">任务没有接收时，在数据库中建立对应玩家-任务数据</span><br><span class="line">QuestManager设定 某个NPC具有某种类型的任务的 Dictionary</span><br><span class="line">当玩家进入游戏时，初始化玩家任务并将任务信息返回客户端，客户端根据服务端返回信息和配置信息初始化某种Npc具有某种类型的任务，当玩家点击Npc时，判断Npc是否有可接受的任务/可完成的任务/已接受未完成的任务，显示相应的UI，当玩家接受/提交任务时，向服务端发送信息，服务端进行校验（提交任务判断任务是否已经完成，已完成则发放奖励；接受任务则判断此任务是否可以接受，都需要判断任务是否存在，等级限制，职业限制等）客户端如接到成功回复，如任务成功完成，则调用事件，判断哪些任务可以接受了等</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ListView-列表组件"><a href="#ListView-列表组件" class="headerlink" title="ListView 列表组件"></a>ListView 列表组件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Assets.Scripts.UI.Set;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Events;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListView</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> UnityAction&lt;ListViewItem&gt; onItemSelected;</span><br><span class="line">    List&lt;ListViewItem&gt; items = <span class="keyword">new</span> List&lt;ListViewItem&gt;();</span><br><span class="line">    <span class="keyword">private</span> ListViewItem selectedItem = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> ListViewItem SelectedItem</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> selectedItem; &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (selectedItem!=<span class="literal">null</span> &amp;&amp; selectedItem != <span class="keyword">value</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                selectedItem.Selected = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            SoundManager.Instance.PlayerSound(SoundDefine.UI_Click);</span><br><span class="line">            selectedItem = <span class="keyword">value</span>;</span><br><span class="line">            <span class="keyword">if</span> (onItemSelected != <span class="literal">null</span>)</span><br><span class="line">                onItemSelected.Invoke((ListViewItem)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddItem</span>(<span class="params">ListViewItem item</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        item.owner = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">this</span>.items.Add(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RemoveAll</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">var</span> it <span class="keyword">in</span> items)</span><br><span class="line">        &#123;</span><br><span class="line">            Destroy(it.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        items.Clear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.selectedItem = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListViewItem</span> : <span class="title">MonoBehaviour</span>, <span class="title">IPointerClickHandler</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> selected;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> Selected</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> selected; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                selected = <span class="keyword">value</span>;</span><br><span class="line">                onSelected(selected);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">onSelected</span>(<span class="params"><span class="built_in">bool</span> selected</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> ListView owner;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerClick</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">this</span>.selected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.Selected = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (owner != <span class="literal">null</span> &amp;&amp; owner.SelectedItem != <span class="keyword">this</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                owner.SelectedItem = <span class="keyword">this</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>协议</p><p><img src="/../images/image-20230313181043980.png" alt="image-20230313181043980"></p><p><img src="/../images/image-20230313181212353.png" alt="image-20230313181212353"></p><p><img src="/../images/image-20230313174130021.png" alt="image-20230313174130021"></p><p><img src="/../images/image-20230313174424756.png" alt="image-20230313174424756"></p><p><img src="/../images/image-20230313175450086.png" alt="image-20230313175450086"></p><p><img src="/../images/image-20230313180036397.png" alt="image-20230313180036397"></p><p><img src="/../images/image-20230313180616625.png" alt="image-20230313180616625"></p><p>强制布局</p><p><img src="/../images/image-20230313205806928.png" alt="image-20230313205806928"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;数据库使用EF  EntityFrameworkCore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;json使用JsonDotNet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;协议使用protobuf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>面经01</title>
    <link href="http://example.com/2023/02/22/%E9%9D%A2%E7%BB%8F01/"/>
    <id>http://example.com/2023/02/22/%E9%9D%A2%E7%BB%8F01/</id>
    <published>2023-02-22T13:33:56.000Z</published>
    <updated>2023-03-02T14:05:05.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unityGC</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/zhangay1998/article/details/122626334?ops_request_misc=%7B%22request_id%22:%22167758686016800213026456%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167758686016800213026456&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122626334-null-null.142%5Ev73%5Einsert_down1,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=unity%E9%9D%A2%E8%AF%95%E9%A2%98&spm=1018.2226.3001.4187">(49条消息) 2022年Unity 面试题 |五萬字 二佰道| Unity面试题大全，面试题总结【全网最全，收藏一篇足够面试】_呆呆敲代码的小Y的博客-CSDN博客</a></p><p>[TOC]</p><span id="more"></span><h1 id="泛型在unity的应用"><a href="#泛型在unity的应用" class="headerlink" title="泛型在unity的应用"></a>泛型在unity的应用</h1><p>1.单例模式</p><p>2.判断游戏物体体是否存在某个组件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">GetAndAddComponent</span>&lt;<span class="title">T</span>&gt;(<span class="params">GameObject obj</span>) <span class="keyword">where</span> T:Component</span> </span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span> (!obj.GetComponent&lt;T&gt;())<span class="comment">//检查该游戏物体是否还有T组件</span></span><br><span class="line">       &#123;</span><br><span class="line">           obj.AddComponent&lt;T&gt;();<span class="comment">//没有添加</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> obj.GetComponent&lt;T&gt;();<span class="comment">//本身就有或者是添加之后的返回</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">Component</span>&gt; <span class="title">GetAndAddComponens</span>&lt;<span class="title">T</span>, <span class="title">K</span>&gt;(<span class="params">GameObject obj</span>) <span class="keyword">where</span> T : Component <span class="keyword">where</span> K : Component</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span> (obj.GetComponent&lt;T&gt;() == <span class="literal">null</span>)<span class="comment">//检查该游戏物体是否还有T组件</span></span><br><span class="line">       &#123;</span><br><span class="line">           com.Add(obj.AddComponent&lt;T&gt;());<span class="comment">//添加并且添加到list</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> (obj.GetComponent&lt;K&gt;() == <span class="literal">null</span>)<span class="comment">//检查该游戏物体是否还有T组件</span></span><br><span class="line">       &#123;</span><br><span class="line">           com.Add(obj.AddComponent&lt;K&gt;());<span class="comment">// 添加并且添加List中</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> com;<span class="comment">//返回list</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="关于Unity3D的四种常用灯光"><a href="#关于Unity3D的四种常用灯光" class="headerlink" title="关于Unity3D的四种常用灯光"></a>关于Unity3D的四种常用灯光</h1><h2 id="定向光"><a href="#定向光" class="headerlink" title="定向光"></a>定向光</h2><p>Directional Light发出的光没有距离的限制且相互平行，所以无论放在什么位置（无穷远\近）都能照射到指定方向的区域，投射出来的阴影也都是一样的。</p><h2 id="点光源"><a href="#点光源" class="headerlink" title="点光源"></a>点光源</h2><p>即空间中一个向所有方向均匀发光的点，类似于现实生活中的灯泡，光线强度和照射距离成反比（距离越远，光线越弱），阴影会随光源的位置而发生变化。</p><h2 id="聚光灯"><a href="#聚光灯" class="headerlink" title="聚光灯"></a>聚光灯</h2><p>效果类似于舞台的聚光灯，光线从一个点发出，向着某个方向按锥形的范围进行照射。与点光源一样，光线会随着距离的增加而逐渐衰弱，阴影也会随光源的位置而发生变化。<br>可以通过调节位置来改变投射出的光圈的大小，也可以通过调节Spot Angle的参数来改变（数值越大，投射出的光圈越大）。</p><h2 id="区域光"><a href="#区域光" class="headerlink" title="区域光"></a>区域光</h2><p>Area（baked only）区域光往Z方向照射且仅能用于光照贴图渲染，光线会随着距离的增加而逐渐衰弱，阴影也会随光源的位置而发生变化。</p><h1 id="unity动画"><a href="#unity动画" class="headerlink" title="unity动画"></a>unity动画</h1><h2 id="IK"><a href="#IK" class="headerlink" title="IK"></a>IK</h2><p>与MatchTarget实现的效果类似，但是可以用在任意层的动画上<br>IK全称反向运动学，也就是根据子节点的位置推算出父节点的关节变化，而根据父节点的位置推算出子节点的关节变化称作正向运动学<br>使用IK动画首先动画类型必须是Humanoid类型并在Animator窗口设置中打开IK Pass</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Transform trans1;</span><br><span class="line"><span class="keyword">public</span> Transform trans2;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorIK</span>(<span class="params"><span class="built_in">int</span> layerIndex</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (ani.GetCurrentAnimatorStateInfo(<span class="number">1</span>).IsName(<span class="string">&quot;AniName&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        ani.SetIKPosition(AvatarIKGoal.RightHand, trans1.position);</span><br><span class="line">        ani.SetIKPositionWeight(AvatarIKGoal.RightHand, <span class="number">1</span>);</span><br><span class="line">        ani.SetIKPosition(AvatarIKGoal.LeftHand, trans2.position);</span><br><span class="line">        ani.SetIKPositionWeight(AvatarIKGoal.LeftHand, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="值类型和引用类型"><a href="#值类型和引用类型" class="headerlink" title="值类型和引用类型"></a>值类型和引用类型</h1><p>值类型：int,bool,float,char,struct,enum</p><p>引用类型：string,object,委托,接口,类,数组</p><p>区别：</p><p>1.值类型直接存储在栈中，引用类型在栈中存储堆中数据的指针和引用，数据存储在堆中</p><p>2.值类型存取快，引用类型存取慢</p><p>3.值类型使用完自动释放，引用类型要等待GC来释放</p><p>4.值类型继承自System.ValueType,引用类型继承自Sysetm.Object</p><h1 id="C-修饰符"><a href="#C-修饰符" class="headerlink" title="C#修饰符"></a>C#修饰符</h1><p>public:无访问限制</p><p>private：仅对该类开放</p><p>protected：只对该类和其派生类公开</p><p>internal：只能在包含该类的程序集中访问</p><p>static ：静态类：无法实例化，只能通过 类名.访问</p><p>​               静态方法：与实例化无关，只能通过类名.访问</p><h1 id="ArrayList和List的区别"><a href="#ArrayList和List的区别" class="headerlink" title="ArrayList和List的区别"></a>ArrayList和List的区别</h1><p>1.ArrayList不带泛型，数据类型丢死，List带泛型数据类型不丢失</p><p>2.ArrayList需要进行装箱拆箱操作，将数据类型转化为Object，List不需要装箱拆箱操作</p><h1 id="简述GC产生的原因，如何避免GC"><a href="#简述GC产生的原因，如何避免GC" class="headerlink" title="简述GC产生的原因，如何避免GC"></a>简述GC产生的原因，如何避免GC</h1><p>GC是避免内存溢出二产生的垃圾回收机制</p><p>当实例化一个对象并且内存不足时，就会触发GC</p><h2 id="Unity的GC机制"><a href="#Unity的GC机制" class="headerlink" title="Unity的GC机制"></a>Unity的GC机制</h2><p>使用了Boehm GC算法（可以参考：<a href="https://en.wikipedia.org/wiki/Boehm_garbage_collector%EF%BC%89%EF%BC%8C%E6%98%AF%60%E9%9D%9E%E5%88%86%E4%BB%A3%60%EF%BC%88non-generational%EF%BC%89%E5%92%8C%60%E9%9D%9E%E5%8E%8B%E7%BC%A9%60%EF%BC%88non-compacting%EF%BC%89%E7%9A%84%E3%80%82">https://en.wikipedia.org/wiki/Boehm_garbage_collector），是`非分代`（non-generational）和`非压缩`（non-compacting）的。</a></p><p>“非分代”是指GC执行清理操作时，必须遍历整个内存，去标记哪些没有被引用并且删除，随着内存的增长，它的性能就会降低。 目前2019版本的unity在实验分代GC算法<br>“非压缩”意味着内存中的对象不会被重新定位，去减小对象之间的内存空隙</p><p>原文链接：<a href="https://blog.csdn.net/gghhb12/article/details/120782191">https://blog.csdn.net/gghhb12/article/details/120782191</a></p><h2 id="四个步骤："><a href="#四个步骤：" class="headerlink" title="四个步骤："></a>四个步骤：</h2><p>1.首先搜素内存堆中所有的托管对象</p><p>2.当这个对象或其子对象有任何引用是有效的时，将此对象标记为有效</p><p>3.释放所有未被标记为有效的对象并收回内存</p><p>4.最后整理内存将所有有效的对象移动到一起</p><h2 id="对象代龄"><a href="#对象代龄" class="headerlink" title="对象代龄"></a>对象代龄</h2><p>CLR初始化后第一批创建的对象列为0代对象，CLR会为0代区域设置一个内存限制，当创建对象的大小 超过这个内存限制时，GC开始工作，清理垃圾并释放内存，GC结束时，幸存的对象会被列为一代对象，并进入一代区域，一代区域起初也会设定一个容量限制，当超出这个容量限制时，GC扩大战场，对一代对象也进行回收，幸存的对象被列为二代对象进入二代区域</p><h2 id="避免GC"><a href="#避免GC" class="headerlink" title="避免GC"></a>避免GC</h2><p>1.减少new的使用</p><p>2.使用公共的对象或静态成员</p><p>3.在频繁操作字符串的场景中，使用stringBulider替换string，因为每次修改string时会新new一个string替换原来的string</p><p>4.使用对象池，减少对象的创建和销毁</p><p>5.减少foreach的使用</p><p>减少GC造成的卡顿：在载入新场景的时候进行GC减少游戏进行中进行的卡顿</p><h1 id="class和struct的区别"><a href="#class和struct的区别" class="headerlink" title="class和struct的区别"></a>class和struct的区别</h1><p>1.class为引用类型，struct为值类型</p><p>2.class在堆上创建实例，struct在栈上创建实例</p><p>3.class作为参数类型传递，传递为引用地址，struct传递的为值</p><p>4.class没有默认的无参构造函数，struct有默认的无参构造函数</p><p>5.class支持继承，struct不支持继承</p><p>6.class很容易赋初始值，struct不容易赋初值</p><p>7.class偏向与面向对象，用于复杂大型的数据，struct偏向于较为简单的数据</p><p>8.class实例只能通过new SomeClass来创建，struct既可以通过new SomeStruct进行创建也可以通过 SomeStruct myStruct 进行创建</p><h1 id="指针和引用的区别"><a href="#指针和引用的区别" class="headerlink" title="指针和引用的区别"></a>指针和引用的区别</h1><p>1.引用不能为空，不存在对空对象的引用，指针可以为空</p><p>2.引用必须初始化引用对象，指针可以不初始化</p><p>3.引用初始化后不能改变，指针可以改变</p><p>4.引用访问对象为直接访问，指针访问对象为间接访问</p><p>5.引用的大小为引用对象的大小，指针的大小为为指针本身，通常为四个字节</p><p>6.引用对象不需要分配内存空间，指针访问对象需要分配空间</p><h1 id="多态的意义"><a href="#多态的意义" class="headerlink" title="多态的意义"></a>多态的意义</h1><p>同一对象被造型为不同的类型时，有不同的功能</p><p>同一类型的引用指向不同的类型时有不同的实现</p><h1 id="不安全代码和非托管代码"><a href="#不安全代码和非托管代码" class="headerlink" title="不安全代码和非托管代码"></a>不安全代码和非托管代码</h1><p>托管代码：在公共语言运行时（CLR）控制下运行的代码</p><p>非托管代码：不在公共语言运行时（CLR）控制下运行的代码</p><p>不安全代码：不安全代码介于托管代码和非托管代码之间，不安全代码仍然在CLR控制下运行，但是但是允许直接通过指针访问内存</p><p>unsafe：非托管代码需要用到这个关键字一般用在带指针的操作场所</p><h1 id="Net和Mono的关系"><a href="#Net和Mono的关系" class="headerlink" title=".Net和Mono的关系"></a>.Net和Mono的关系</h1><p>.Net是一个语言平台，Mono为.Net提供了集成开发环境，集成并实现了.Net的编译器，CLR和基础类库，使Net既可以在windows上运行，也可以运行于 Linux 和 Os 等</p><h1 id="接口和委托"><a href="#接口和委托" class="headerlink" title="接口和委托"></a>接口和委托</h1><p>接口约束了类应该具备的功能的集合，约束了类应该具备哪些功能，使类从千变万化的逻辑中解脱出来，方便类的管理和拓展，同时解决了类的单继承问题；</p><h1 id="ref和out"><a href="#ref和out" class="headerlink" title="ref和out"></a>ref和out</h1><p>ref修饰引用参数，参数必须赋值，带返回值，又进又出</p><p>out修饰输出参数，参数可以不赋值，在返回之前必须明确赋值</p><h1 id="JIT和AOT的区别"><a href="#JIT和AOT的区别" class="headerlink" title="JIT和AOT的区别"></a>JIT和AOT的区别</h1><p>just-in-time 实时编译           执行慢安装快空间小</p><p>ahead-of-time 预先编译      执行快安装慢占用内存外存大</p><h1 id="委托和事件的区别"><a href="#委托和事件的区别" class="headerlink" title="委托和事件的区别"></a>委托和事件的区别</h1><p>1.委托为一个类，可以进行实例化，可以通过委托的构造函数把方法赋值给委托实例</p><p>2.事件为一个委托类型的变量</p><p>3.事件可以通过+&#x3D;注册委托实例或方法 ；可以通过-&#x3D;注销委托实例或方法</p><p>4.<code>EventHandler</code>就是一个委托</p><p>5.委托可以在类内部和外部进行触发，而事件只能在内部触发</p><p>6.观察者模式中被观察者可以在内部生成一个事件作为外部观察者注册的接口</p><h1 id="c-EventArgs的使用（事件参数）"><a href="#c-EventArgs的使用（事件参数）" class="headerlink" title="c#EventArgs的使用（事件参数）"></a>c#EventArgs的使用（事件参数）</h1><p>如果有多个类要打印信息，如Student类，Teacher类，School类…如下代码。各类统一继承于EventArgs的话，那么传参就很方便了。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//把打印信息统一为一个函数，一个EventArgs参数。</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">ShowMessage</span>(<span class="params">EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">is</span> Student)               <span class="comment">//判断参数类型</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> student = e <span class="keyword">as</span> Student; <span class="comment">//把参数转换为Student类</span></span><br><span class="line">                <span class="keyword">return</span> student.Name + <span class="string">&quot;, address = &quot;</span> + student.Address;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">is</span> Teacher)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> teacher = e <span class="keyword">as</span> Teacher;</span><br><span class="line">                <span class="keyword">return</span> teacher.Name + <span class="string">&quot;, course = &quot;</span> + teacher.Course;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;Not found&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"> </span><br><span class="line">            Console.WriteLine(ShowMessage(<span class="keyword">new</span> Student(<span class="string">&quot;James&quot;</span>,<span class="string">&quot;杭州&quot;</span>)));</span><br><span class="line">            Console.WriteLine(ShowMessage(<span class="keyword">new</span> Teacher(<span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;英语&quot;</span>)));</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//继承于EventArgs，便于传参</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span> : <span class="title">EventArgs</span>    </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> Address &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> address</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.Name = name;</span><br><span class="line">                <span class="keyword">this</span>.Address = address;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//继承于EventArgs，便于传参</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Teacher</span> : <span class="title">EventArgs</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> ClassId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> Course &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> course</span>)</span></span><br><span class="line">            &#123;<span class="number">0</span></span><br><span class="line">                <span class="keyword">this</span>.Name = name;</span><br><span class="line">                <span class="keyword">this</span>.Course = course;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">James, address = 杭州</span></span><br><span class="line"><span class="comment">Jack, course = 英语</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="string，stringBuilder，stringBuffer"><a href="#string，stringBuilder，stringBuffer" class="headerlink" title="string，stringBuilder，stringBuffer"></a>string，stringBuilder，stringBuffer</h1><p>String为不可变实体，当对String进行操作时，将开辟一个新的String实例并进行赋值，旧的String实例将等待GC在频繁修改字符串的场景下效能消耗比较大</p><p>stringBuilder当进行修改时，在原字符串上进行操作，不会生成新的实例对象，为非线程安全，所以性能比较好点</p><p>stringBuffer为线程安全，性能较差</p><p>性能比较stringBulider&gt; stringBuffer&gt;string</p><p>进行少量数据修改操作：string</p><p>单线程操作字符串缓冲区下操作大量数据：stringBulider</p><p>多线程操作字符串缓冲区下操作大量数据：stringBuffer</p><h1 id="哈希表和字典的区别"><a href="#哈希表和字典的区别" class="headerlink" title="哈希表和字典的区别"></a>哈希表和字典的区别</h1><p>字典当试图寻找一个不存在的键时会返回&#x2F;抛出异常   哈希表会返回null</p><p>字典的查找比哈希表快因为不需要进行装箱和拆箱的操作</p><p>字典只有公共静态变量为线程安全的，哈希表所有成员都为安全的</p><p>字典创建时必须指定键和值的类型，哈希表可以存放任何键值类型</p><p>字典的遍历顺序为存入的顺序，哈希表的遍历顺序是乱序的</p><h1 id="image和Rawimage"><a href="#image和Rawimage" class="headerlink" title="image和Rawimage"></a>image和Rawimage</h1><p>Image比<code>Rawimage</code>更消耗性能</p><p>image只能放Sprite属性的图片<code>RawImage</code>可以放任何类型的图片</p><p>Image适合放有操作的图片，<code>Rawimage</code>放单独展示的图片即可，性能较好</p><h1 id="碰撞器触发器"><a href="#碰撞器触发器" class="headerlink" title="碰撞器触发器"></a>碰撞器触发器</h1><p>物体发生碰撞的必要条件：</p><p>　　两个物体都必须带有碰撞器(Collider)，其中一个物体还必须带有Rigidbody刚体</p><p>（1）触发器没有碰撞效果</p><p>（2）IsTrigger&#x3D;true;</p><p>触发信息检测：</p><p>　　1.MonoBehaviour.OnTriggerEnter(Collider collider)当进入触发器</p><p>　　2.MonoBehaviour.OnTriggerExit(Collider collider)当退出触发器</p><p>　　3.MonoBehaviour.OnTriggerStay(Collider collider)当逗留触发器</p><p>（1）碰撞器有碰撞效果</p><p>（2）IsTrigger&#x3D;false</p><p>碰撞信息检测：</p><p>　　1.MonoBehaviour.OnCollisionEnter(Collision collision) 当进入碰撞器</p><p>　　2.MonoBehaviour.OnCollisionExit(Collision collision) 当退出碰撞器</p><p>　　3.MonoBehaviour.OnCollisionStay(Collision collision)  当逗留碰撞器</p><p>拓展：发生碰撞的必要条件是什么？<br>1：两个物体都必须带有碰撞盒。<br>2：至少有一个物体带有Rigidbody组件。<br>3：两个物体要发生相对位移。</p><h1 id="点乘叉乘"><a href="#点乘叉乘" class="headerlink" title="点乘叉乘"></a>点乘叉乘</h1><p><img src="/../images/image-20230301175833852.png" alt="image-20230301175833852"></p><p><img src="/../images/image-20230301175922382.png" alt="image-20230301175922382"></p><h1 id="什么是LightMap"><a href="#什么是LightMap" class="headerlink" title="什么是LightMap"></a>什么是LightMap</h1><p>LightMap就是在三维软件上打好光，然后渲染把场景各表面的光照输出到贴图上，然后通过引擎贴到贴图上，这样物体就有了光照的感觉</p><h1 id="四元数对欧拉角的优点"><a href="#四元数对欧拉角的优点" class="headerlink" title="四元数对欧拉角的优点"></a>四元数对欧拉角的优点</h1><p>1.四元数可用于增量旋转</p><p>2.可以避免万向锁</p><p>3.有两种表达方式（互为负）欧拉角有无数种表达方式</p><h1 id="Addcomponent后哪个生命周期函数会被调用"><a href="#Addcomponent后哪个生命周期函数会被调用" class="headerlink" title="Addcomponent后哪个生命周期函数会被调用"></a>Addcomponent后哪个生命周期函数会被调用</h1><h1 id="层剔除LayerMask（图层模板）"><a href="#层剔除LayerMask（图层模板）" class="headerlink" title="层剔除LayerMask（图层模板）"></a>层剔除LayerMask（图层模板）</h1><p>我们在使用Unity提供的物理系统的时候，经常需要发射射线或者检测碰撞体等等。<br>比如下面这个方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Collider[] <span class="title">OverlapBox</span> (<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">Vector3 center, Vector3 halfExtents, </span></span></span><br><span class="line"><span class="params"><span class="function">Quaternion orientation= Quaternion.identity, <span class="built_in">int</span> layerMask= AllLayers, </span></span></span><br><span class="line"><span class="params"><span class="function">QueryTriggerInteraction queryTriggerInteraction= QueryTriggerInteraction.UseGlobal</span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>描述<br>查找与给定盒体接触或位于盒体内部的所有碰撞体。<br>创建一个您定义的不可见盒体，通过输出与该盒体发生接触的任何碰撞体来测试碰撞。</p><p>这个方法的第四个参数是layerMask，意思是<br>你指定一些图层，让你的OverlapBox只能对于指定的layerMask做检查，如果该碰撞体的图层是你指定的图层，那么就加入到返回结果中；反之即使这个碰撞体符合要求，也不会加入到返回结果中</p><h2 id="获取图层的方法"><a href="#获取图层的方法" class="headerlink" title="获取图层的方法"></a>获取图层的方法</h2><p>方法一<br>使用方法LayerMask.GetMask</p><p>public LayerMask m_LayerMask &#x3D; LayerMask.GetMask(new string[]{“Default”, “Hit”});</p><p>方法二<br>使用二进制位运算符按位或 : “|”</p><p>public LayerMask m_LayerMask &#x3D; LayerMask.GetMask(“Default”) | LayerMask.GetMask(“Hit”);</p><p>方法三<br>LayerMask.NameToLayer是获得该层的在列表中的索引，实际值通过GetMask获取，若想要把索引转换为实际值，可以通过移位操作获得</p><p>上面这句话的意思是：LayerMask.NameToLayer获取的是所有，也就是你点击任意游戏对象的Layer，有很多图层供你选择，左边的数字就是索引。</p><p>注意：但是实际的LayMask并不是按索引存储的，而是二进制存储。例如Hit的索引是2，那么它具体存的数值就是1 &lt;&lt; 2 &#x3D; 4，所以你LayerMask.NameToLayer(“Hit”)的值就是4而不是2 。所以在使用NameToLayer的时候需要移位。</p><p>public LayerMask m_LayerMask &#x3D;<br>            (1 &lt;&lt; LayerMask.NameToLayer(“Default”)) | (1 &lt;&lt; LayerMask.NameToLayer(“Hit”));</p><h2 id="层剔除"><a href="#层剔除" class="headerlink" title="层剔除"></a>层剔除</h2><p>int layer &#x3D; LayerMask.NameToLayer(“Ground”); &#x2F;&#x2F;假设&#x3D;10</p><p>LayerMask.GetMask((“Ground”); &#x2F;&#x2F;相当于 1 &lt;&lt; 10</p><p>其实很简单：</p><p>1 &lt;&lt; 10 打开第10的层。 等价于【1 &lt;&lt; LayerMask.NameToLayer(“Ground”);】 也等价于【 LayerMask.GetMask((“Ground”);】</p><p>~(1 &lt;&lt; 10) 打开除了第10之外的层。</p><p>~(1 &lt;&lt; 0) 打开所有的层。</p><p>(1 &lt;&lt; 10) | (1 &lt;&lt; 8) 打开第10和第8的层。等价于【 LayerMask.GetMask((“Ground”, “Wall”);】</p><p>在代码中使用时如何开启某个Layers？<br>LayerMask mask &#x3D; 1 &lt;&lt; 你需要开启的Layers层。<br>LayerMask mask &#x3D; 0 &lt;&lt; 你需要关闭的Layers层。<br>举几个个栗子：</p><p>LayerMask mask &#x3D; 1 &lt;&lt; 2; 表示开启Layer2。</p><p>LayerMask mask &#x3D; 0 &lt;&lt; 5;表示关闭Layer5。</p><p>LayerMask mask &#x3D; 1&lt;&lt;2|1&lt;&lt;8;表示开启Layer2和Layer8。</p><p>LayerMask mask &#x3D; 0&lt;&lt;3|0&lt;&lt;7;表示关闭Layer3和Layer7。</p><p>上面也可以写成：</p><p>LayerMask mask &#x3D; ~（1&lt;&lt;3|1&lt;&lt;7）;表示关闭Layer3和Layer7。</p><p>LayerMask mask &#x3D; 1&lt;&lt;2|0&lt;&lt;4;表示开启Layer2并且同时关闭Layer4.</p><h1 id="画布的三种模式"><a href="#画布的三种模式" class="headerlink" title="画布的三种模式"></a>画布的三种模式</h1><p>1.覆盖模式</p><p>创建画布之后的默认模式，画布占满整个屏幕该模式和摄像机无关，始终显示在3D物体的上面；屏幕空间为二维空间</p><p>2.摄像机模式</p><p>设置成该模式时需要指定摄像机游戏物体，画布也是占满整个屏幕</p><p>3.世界空间模式</p><p>设置为该模式后画布就变为二维的正方形模式，可以在场景内任意移动，一般作为血条显示，玩家名称等和AR开发</p><h1 id="CharacterController和ridebody的区别"><a href="#CharacterController和ridebody的区别" class="headerlink" title="CharacterController和ridebody的区别"></a>CharacterController和ridebody的区别</h1><h1 id="重写和重载的区别"><a href="#重写和重载的区别" class="headerlink" title="重写和重载的区别"></a>重写和重载的区别</h1><p>1.重载发生在同一类中，重写发生在不同类中</p><p>2.重载函数的参数不相同，重写的参数相同</p><p>3.重载调用时使用不同的参数，重写调用时参数相同</p><p>4.重载在编译时多态，重写在运行时多态</p><h1 id="unity常用的资源路径"><a href="#unity常用的资源路径" class="headerlink" title="unity常用的资源路径"></a>unity常用的资源路径</h1><p><code>Application.dataPath</code>                         Asset文件夹的绝对路径</p><p><code>Application.streamingAssetsPath</code>   <code>streamingAssetsPath</code>文件夹的绝对路径 只读目录</p><p><code>Application.persistentData</code>               可读写目录文件夹</p><h1 id="如何安全的在不同的工程之间安全地迁移asset数据"><a href="#如何安全的在不同的工程之间安全地迁移asset数据" class="headerlink" title="如何安全的在不同的工程之间安全地迁移asset数据"></a>如何安全的在不同的工程之间安全地迁移asset数据</h1><p>三种方法：</p><p>1.将Assets目录和library目录同时迁移</p><p>2.导出包</p><p>3.用unity自带的assets Server功能</p><h1 id="unity-数据保存类-PlayerPrefabs"><a href="#unity-数据保存类-PlayerPrefabs" class="headerlink" title="unity 数据保存类 PlayerPrefabs"></a>unity 数据保存类<code> PlayerPrefabs</code></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SetInt()      保存int类型</span><br><span class="line">GetInt()      获取int类型</span><br><span class="line">SetFloat()    保存float类型</span><br><span class="line">GetFloat()    获取float类型</span><br><span class="line">SetString()   保存string类型</span><br><span class="line">GetString()   获取string类型</span><br></pre></td></tr></table></figure><h1 id="动态加载资源的方式"><a href="#动态加载资源的方式" class="headerlink" title="动态加载资源的方式"></a>动态加载资源的方式</h1><p>instantiate：最简单的一种方式，以实例化的方式动态生成一个物体</p><p>Assetsbundle：将资源打成 AssetBundle 放在服务器或者本地磁盘 ，然后使用WWW模板get下来，</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;unityGC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/zhangay1998/article/details/122626334?ops_request_misc=%7B%22request_id%22:%22167758686016800213026456%22,%22scm%22:%2220140713.130102334..%22%7D&amp;request_id=167758686016800213026456&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122626334-null-null.142%5Ev73%5Einsert_down1,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&amp;utm_term=unity%E9%9D%A2%E8%AF%95%E9%A2%98&amp;spm=1018.2226.3001.4187&quot;&gt;(49条消息) 2022年Unity 面试题 |五萬字 二佰道| Unity面试题大全，面试题总结【全网最全，收藏一篇足够面试】_呆呆敲代码的小Y的博客-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="http://example.com/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="http://example.com/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://example.com/2023/02/19/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2023/02/19/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-02-19T14:20:58.109Z</published>
    <updated>2023-02-28T14:00:35.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设计模式六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则</span><br><span class="line"></span><br><span class="line">单例模式</span><br><span class="line">状态模式</span><br><span class="line">外观模式</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="设计模式六大原则"><a href="#设计模式六大原则" class="headerlink" title="设计模式六大原则"></a>设计模式六大原则</h1><p>原文：<a href="https://blog.csdn.net/m0_50180963/article/details/108812271">https://blog.csdn.net/m0_50180963/article/details/108812271</a></p><h2 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h2><p>（类和方法，接口）</p><p>单一职责原则（Single Responsibility Principle，SRP）又称单一功能原则。这里的职责是指类变化的原因，单一职责原则规定一个类应该有且仅有一个引起它变化的原因，否则类应该被拆分（There should never be more than one reason for a class to change）。</p><p>该原则提出对象不应该承担太多职责，如果一个对象承担了太多的职责，至少存在以下两个缺点：</p><p>一个职责的变化可能会削弱或者抑制这个类实现其他职责的能力；</p><p>当客户端需要该对象的某一个职责时，不得不将其他不需要的职责全都包含进来，从而造成冗余代码或代码的浪费。</p><h3 id="单一职责原则的优点"><a href="#单一职责原则的优点" class="headerlink" title="单一职责原则的优点"></a>单一职责原则的优点</h3><p>单一职责原则的核心就是控制类的粒度大小、将对象解耦、提高其内聚性。如果遵循单一职责原则将有以下优点。</p><p>降低类的复杂度。一个类只负责一项职责，其逻辑肯定要比负责多项职责简单得多。</p><p>提高类的可读性。复杂性降低，自然其可读性会提高。</p><p>提高系统的可维护性。可读性提高，那自然更容易维护了。</p><p>变更引起的风险降低。变更是必然的，如果单一职责原则遵守得好，当修改一个功能时，可以显著降低对其他功能的影响</p><h2 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h2><p>（扩展开放，修改关闭）</p><p>开闭原则的实现方法：可以通过“抽象约束、封装变化”来实现开闭原则，即通过接口或者抽象类为软件实体定义一个相对稳定的抽象层，而将相同的可变因素封装在相同的具体实现类中。</p><p>因为抽象灵活性好，适应性广，只要抽象的合理，可以基本保持软件架构的稳定。而软件中易变的细节可以从抽象派生来的实现类来进行扩展，当软件需要发生变化时，只需要根据需求重新派生一个实现类来扩展就可以了。</p><h2 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h2><p>（基类和子类之间的关系）</p><p>里氏替换原则通俗来讲就是：子类可以扩展父类的功能，但不能改变父类原有的功能。也就是说：子类继承父类时，除添加新的方法完成新增功能外，尽量不要重写父类的方法。</p><p>根据上述理解，对里氏替换原则的定义可以总结如下：</p><p>子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法</p><p>子类中可以增加自己特有的方法</p><p>当子类的方法重载父类的方法时，方法的前置条件（即方法的输入参数）要比父类的方法更宽松</p><p>当子类的方法实现父类的方法时（重写&#x2F;重载或实现抽象方法），方法的后置条件（即方法的的输出&#x2F;返回值）要比父类的方法更严格或相等</p><p>通过重写父类的方法来完成新的功能写起来虽然简单，但是整个继承体系的可复用性会比较差，特别是运用多态比较频繁时，程序运行出错的概率会非常大。</p><p>如果程序违背了里氏替换原则，则继承类的对象在基类出现的地方会出现运行错误。</p><p>这时其修正方法是：取消原来的继承关系，重新设计它们之间的关系。</p><p>关于里氏替换原则的例子，最有名的是“正方形不是长方形”。当然，生活中也有很多类似的例子，例如，企鹅、鸵鸟和几维鸟从生物学的角度来划分，它们属于鸟类；但从类的继承关系来看，由于它们不能继承“鸟”会飞的功能，所以它们不能定义成“鸟”的子类。同样，由于“气球鱼”不会游泳，所以不能定义成“鱼”的子类；“玩具炮”炸不了敌人，所以不能定义成“炮”的子类等。</p><p>对于正方形和长方形最好的做法是再添加一个父类，他们同时继承自这个父类。</p><h2 id="依赖倒置原则"><a href="#依赖倒置原则" class="headerlink" title="依赖倒置原则"></a>依赖倒置原则</h2><p>（依赖抽象接口，而不是具体对象）</p><p>依赖倒置原则的主要作用如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">依赖倒置原则可以降低类间的耦合性。</span><br><span class="line"></span><br><span class="line">依赖倒置原则可以提高系统的稳定性。</span><br><span class="line"></span><br><span class="line">依赖倒置原则可以减少并行开发引起的风险。</span><br><span class="line"></span><br><span class="line">依赖倒置原则可以提高代码的可读性和可维护性。</span><br></pre></td></tr></table></figure><p>依赖倒置原则的实现方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">依赖倒置原则的目的是通过要面向接口的编程来降低类间的耦合性，所以我们在实际编程中只要遵循以下4点，就能在项目中满足这个规则。</span><br><span class="line"></span><br><span class="line">每个类尽量提供接口或抽象类，或者两者都具备。</span><br><span class="line"></span><br><span class="line">变量的声明类型尽量是接口或者是抽象类。</span><br><span class="line"></span><br><span class="line">任何类都不应该从具体类派生。</span><br><span class="line"></span><br><span class="line">使用继承时尽量遵循里氏替换原则。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> principle;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DIPtest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Customer wang=<span class="keyword">new</span> <span class="title class_">Customer</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;顾客购买以下商品：&quot;</span>); </span><br><span class="line">        wang.shopping(<span class="keyword">new</span> <span class="title class_">ShaoguanShop</span>()); </span><br><span class="line">        wang.shopping(<span class="keyword">new</span> <span class="title class_">WuyuanShop</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//商店</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Shop</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sell</span><span class="params">()</span>; <span class="comment">//卖</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//继承接口实现抽象方法</span></span><br><span class="line"><span class="comment">//韶关网店</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ShaoguanShop</span> <span class="keyword">implements</span> <span class="title class_">Shop</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sell</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;韶关土特产：香菇、木耳……&quot;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//婺源网店</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WuyuanShop</span> <span class="keyword">implements</span> <span class="title class_">Shop</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sell</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;婺源土特产：绿茶、酒糟鱼……&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//顾客</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Customer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shopping</span><span class="params">(Shop shop)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//购物</span></span><br><span class="line">        System.out.println(shop.sell()); </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><p>（接口按照功能细分）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接口要实现的功能应该尽量单一</span><br></pre></td></tr></table></figure><h3 id="接口隔离原则的优点"><a href="#接口隔离原则的优点" class="headerlink" title="接口隔离原则的优点"></a>接口隔离原则的优点</h3><p>接口隔离原则是为了约束接口、降低类对接口的依赖性，遵循接口隔离原则有以下 5 个优点。</p><p>将臃肿庞大的接口分解为多个粒度小的接口，可以预防外来变更的扩散，提高系统的灵活性和可维护性。</p><p>接口隔离提高了系统的内聚性，减少了对外交互，降低了系统的耦合性。</p><p>如果接口的粒度大小定义合理，能够保证系统的稳定性；但是，如果定义过小，则会造成接口数量过多，使设计复杂化；如果定义太大，灵活性降低，无法提供定制服务，给整体项目带来无法预料的风险。</p><p>使用多个专门的接口还能够体现对象的层次，因为可以通过接口的继承，实现对总接口的定义。</p><p>能减少项目工程中的代码冗余。过大的大接口里面通常放置许多不用的方法，当实现这个接口的时候，被迫设计冗余的代码。</p><h3 id="接口隔离原则的实现方法"><a href="#接口隔离原则的实现方法" class="headerlink" title="接口隔离原则的实现方法"></a>接口隔离原则的实现方法</h3><p>在具体应用接口隔离原则时，应该根据以下几个规则来衡量。</p><p>接口尽量小，但是要有限度。一个接口只服务于一个子模块或业务逻辑。</p><p>为依赖接口的类定制服务。只提供调用者需要的方法，屏蔽不需要的方法。</p><p>了解环境，拒绝盲从。每个项目或产品都有选定的环境因素，环境不同，接口拆分的标准就不同深入了解业务逻辑。</p><p>提高内聚，减少对外交互。使接口用最少的方法去完成最多的事情。</p><p>对于接口隔离，大家还是可以参考单一职责提到的示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String username, String password)</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(String email, String username, String password)</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logError</span><span class="params">(String msg)</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendEmail</span><span class="params">(String email)</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这时候，应该就能理解拆分的好处了。</p><h2 id="迪米特法则-（最小知识原则）"><a href="#迪米特法则-（最小知识原则）" class="headerlink" title="迪米特法则 （最小知识原则）"></a>迪米特法则 （最小知识原则）</h2><p>（类与类之间的亲疏关系）</p><h3 id="迪米特法则的定义"><a href="#迪米特法则的定义" class="headerlink" title="迪米特法则的定义"></a>迪米特法则的定义</h3><p>只与你的直接朋友交谈，不跟“陌生人”说话（Talk only to your immediate friends and not to strangers）。其含义是：如果两个软件实体无须直接通信，那么就不应当发生直接的相互调用，可以通过第三方转发该调用。其目的是降低类之间的耦合度，提高模块的相对独立性。</p><p>迪米特法则中的“朋友”是指：当前对象本身、当前对象的成员对象、当前对象所创建的对象、当前对象的方法参数等，这些对象同当前对象存在关联、聚合或组合关系，可以直接访问这些对象的方法。</p><h3 id="迪米特法则的优点"><a href="#迪米特法则的优点" class="headerlink" title="迪米特法则的优点"></a>迪米特法则的优点</h3><p>迪米特法则要求限制软件实体之间通信的宽度和深度，正确使用迪米特法则将有以下两个优点。</p><p>降低了类之间的耦合度，提高了模块的相对独立性。</p><p>由于亲合度降低，从而提高了类的可复用率和系统的扩展性。</p><p>但是，过度使用迪米特法则会使系统产生大量的中介类，从而增加系统的复杂性，使模块之间的通信效率降低。所以，在釆用迪米特法则时需要反复权衡，确保高内聚和低耦合的同时，保证系统的结构清晰。</p><h3 id="迪米特法则的实现方法"><a href="#迪米特法则的实现方法" class="headerlink" title="迪米特法则的实现方法"></a>迪米特法则的实现方法</h3><p>从迪米特法则的定义和特点可知，它强调以下两点：</p><p>从依赖者的角度来说，只依赖应该依赖的对象。</p><p>从被依赖者的角度说，只暴露应该暴露的方法。</p><p>所以，在运用迪米特法则时要注意以下 6 点。</p><p>在类的划分上，应该创建弱耦合的类。类与类之间的耦合越弱，就越有利于实现可复用的目标。</p><p>在类的结构设计上，尽量降低类成员的访问权限。</p><p>在类的设计上，优先考虑将一个类设置成不变类。</p><p>在对其他类的引用上，将引用其他对象的次数降到最低。</p><p>不暴露类的属性成员，而应该提供相应的访问器（set 和 get 方法）。</p><p>谨慎使用序列化（Serializable）功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> principle;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoDtest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Agent agent=<span class="keyword">new</span> <span class="title class_">Agent</span>();</span><br><span class="line">        agent.setStar(<span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&quot;林心如&quot;</span>));</span><br><span class="line">        agent.setFans(<span class="keyword">new</span> <span class="title class_">Fans</span>(<span class="string">&quot;粉丝韩丞&quot;</span>));</span><br><span class="line">        agent.setCompany(<span class="keyword">new</span> <span class="title class_">Company</span>(<span class="string">&quot;中国传媒有限公司&quot;</span>));</span><br><span class="line">        agent.meeting();</span><br><span class="line">        agent.business();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//经纪人</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Agent</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Star myStar;</span><br><span class="line">    <span class="keyword">private</span> Fans myFans;</span><br><span class="line">    <span class="keyword">private</span> Company myCompany;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStar</span><span class="params">(Star myStar)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.myStar=myStar;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFans</span><span class="params">(Fans myFans)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.myFans=myFans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCompany</span><span class="params">(Company myCompany)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.myCompany=myCompany;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">meeting</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(myFans.getName()+<span class="string">&quot;与明星&quot;</span>+myStar.getName()+<span class="string">&quot;见面了。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">business</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(myCompany.getName()+<span class="string">&quot;与明星&quot;</span>+myStar.getName()+<span class="string">&quot;洽淡业务。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//明星</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Star</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    Star(String name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//粉丝</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fans</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    Fans(String name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//媒体公司</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Company</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    Company(String name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    程序的运行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    粉丝韩丞与明星林心如见面了。</span></span><br><span class="line"><span class="comment">    中国传媒有限公司与明星林心如洽淡业务。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通单例</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Singleton</span>&lt;<span class="title">T</span>&gt; <span class="keyword">where</span> <span class="title">T</span> : <span class="title">new</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> T instance;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> T Instance</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> Equals(instance, <span class="literal">default</span>(T)) ? (instance = <span class="keyword">new</span> T()) : instance;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span>Mono单例</span></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">MonoSingleton</span>&lt;<span class="title">T</span>&gt; : <span class="title">MonoBehaviour</span> <span class="keyword">where</span> <span class="title">T</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> <span class="keyword">global</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">static</span> T instance;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> T Instance</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (instance == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                instance =(T)FindObjectOfType&lt;T&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> instance;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">global</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(instance!=<span class="literal">null</span> &amp;&amp; instance!=<span class="keyword">this</span>.GetComponent&lt;T&gt;())</span><br><span class="line">            &#123;</span><br><span class="line">                Destroy(<span class="keyword">this</span>.gameObject);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            instance = <span class="keyword">this</span>.GetComponent&lt;T&gt;();</span><br><span class="line">            DontDestroyOnLoad(<span class="keyword">this</span>.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.OnAwake();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.OnStart();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnStart</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnAwake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a>状态模式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.1&gt;、定义</span><br><span class="line"></span><br><span class="line">状态模式的核心思想是允许一个对象在它的内部状态改变时改变它的行为，即不同的状态对应不同的行为。</span><br><span class="line"></span><br><span class="line">状态模式的针对性很强，当有状态变化的时候可以选择状态模式。</span><br></pre></td></tr></table></figure><p>状态模式效果：</p><p>1&gt;、状态模式的本质是将条件语句的各个分支封装起来，从而实现了状态逻辑与动作的分离。当分支很多时，状态模式可以给代码的维护带来很大的便利。</p><p>2&gt;、多态性的实现。</p><p>3&gt;、状态转换的显示化。状态模式将状态的切换逻辑存放到状态对象中，可以实现状态的自动切换，使各个状态界限分明，相互独立。</p><p>4&gt;、采用分支结构时，Context对象需要关心所有状态的切换逻辑，当分支越来越多时，复杂度也会越来越大。而状态模式中Context无需关心状态的切换逻辑，每个状态对象也只需关心状态的下一个可能状态的切换逻辑。</p><p>状态模式主要解决的是当控制一个对象状态的条件表达式过于复杂时的情况。把状态的判断逻辑表示不同状态的一系列类中，可以把复杂的判断逻辑简化。状态模式的目的是为了将状态与不同状态下的行为进行分离，从而简化复杂的条件判断。</p><p>状态模式主要适用场景：</p><p>◊ 一个对象的行为取决于它的状态，并且必须在运行时刻根据状态改变其行为；</p><p>◊ 一个操作中包含庞大的分支结构，并且这些分支决定于对象的状态。</p><h1 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a>外观模式</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>外观模式（Facade Pattern）是一种结构型设计模式， 能为复杂系统、 程序库或框架提供一个简单 （但有限） 的接口。</p><p>外观定义了一个高层接口，让子系统更容易使用。使用外观模式时，我们创建了一个统一的类，用来包装子系统中一个或多个复杂的类，客户端可以直接通过外观类来调用内部子系统中方法，从而外观模式让客户和子系统之间避免了紧耦合。</p><h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p><strong>外观角色（Facade）</strong>：在客户端可以调用它的方法，在外观角色中可以知道相关的（一个或者多个）子系统的功能和责任；在正常情况下，它将所有从客户端发来的请求委派到相应的子系统去，传递给相应的子系统对象处理。<br><strong>子系统角色（SubSystem Classes）</strong>：在软件系统中可以有一个或者多个子系统角色，每一个子系统可以不是一个单独的类，而是一个类的集合，它实现子系统的功能；每一个子系统都可以被客户端直接调用，或者被外观角色调用，它处理由外观类传过来的请求；子系统并不知道外观的存在，对于子系统而言，外观角色仅仅是另外一个客户端而已。</p><h1 id="中介系统"><a href="#中介系统" class="headerlink" title="中介系统"></a>中介系统</h1><h2 id="中介者模式的优点："><a href="#中介者模式的优点：" class="headerlink" title="中介者模式的优点："></a>中介者模式的优点：</h2><p>中介者模式简化了对象之间的交互，他用中介者和同事之间的一对多的关系代替了原本同事对象之间的多对多的关系。<br>将各个同事对象解耦，我们可以独立地改变每一个同事对象和中介者。</p><h2 id="中介者模式的缺点："><a href="#中介者模式的缺点：" class="headerlink" title="中介者模式的缺点："></a>中介者模式的缺点：</h2><p>在具体的中介类中包含了大量的同事之间的交互细节，这可能导致具体中介类非常复杂，当然我们可以通过命令模式来改造中介者模式。</p><h1 id="访问者模式"><a href="#访问者模式" class="headerlink" title="访问者模式"></a>访问者模式</h1><h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问者模式是封装一些施加于某种数据结构之上的操作。一旦这些操作需要修改的话，接受这个操作的数据结构则可以保存不变。访问者模式适用于数据结构相对稳定的系统， 它把数据结构和作用于数据结构之上的操作之间的耦合度降低，使得操作集合可以相对自由地改变。</span><br><span class="line"></span><br><span class="line">　数据结构的每一个节点都可以接受一个访问者的调用，此节点向访问者对象传入节点对象，而访问者对象则反过来执行节点对象的操作。这样的过程叫做“双重分派”。节点调用访问者，将它自己传入，访问者则将某算法针对此节点执行。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;设计模式六大原则：单一职责原则，开闭原则，里氏替换原则，依赖倒置原则，接口隔离原则，迪米特原则&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单例模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;状态模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;外观模式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Xlua01</title>
    <link href="http://example.com/2023/02/13/Xlua01/"/>
    <id>http://example.com/2023/02/13/Xlua01/</id>
    <published>2023-02-13T13:47:04.000Z</published>
    <updated>2023-03-08T10:06:24.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">整包分包</span><br><span class="line">资源加载</span><br><span class="line">Lua管理</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="整包分包"><a href="#整包分包" class="headerlink" title="整包分包"></a>整包分包</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">整包：第一次下载时下载所有资源</span><br><span class="line">优点：首次更新少，直接启动</span><br><span class="line">缺点：安装包下载时间长</span><br><span class="line">分包：第一次下载下载少量资源，进入游戏在进行补充</span><br><span class="line">优点：安装包小，下载时间短，安装快</span><br><span class="line">缺点：首次更新时间长</span><br><span class="line"></span><br><span class="line">整包时，将只读目录考培到可读写目录  </span><br><span class="line">只读目录：Application.streamingAssetsPath</span><br><span class="line">可读写目录：Application.persistentDataPath</span><br><span class="line"></span><br><span class="line">// 全局查找lua函数</span><br><span class="line">XLua.LuaFunction function = Manager.Lua.luaEnv.Global.Get&lt;XLua.LuaFunction&gt;(&quot;Main&quot;);</span><br><span class="line">            function.Call();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="资源加载"><a href="#资源加载" class="headerlink" title="资源加载"></a>资源加载</h1><p><img src="/../images/image-20230216103247984.png" alt="image-20230216103247984"></p><p><img src="/../images/image-20230216103309991.png" alt="image-20230216103309991"></p><p><img src="/../images/image-20230216103729533.png" alt="image-20230216103729533"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最后写入防止下载到一半退出</span><br></pre></td></tr></table></figure><h1 id="Lua管理"><a href="#Lua管理" class="headerlink" title="Lua管理"></a>Lua管理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">异步加载 同步使用 预加载</span><br></pre></td></tr></table></figure><h2 id="Lua文件加载"><a href="#Lua文件加载" class="headerlink" title="Lua文件加载"></a>Lua文件加载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在编辑器模式下，直接读取编辑器中的文件进行更新，写入脚本字典</span><br><span class="line">非编辑器模式，在解析bundle时将Lua脚本读出，并进行预加载，写入脚本字典</span><br><span class="line">注意资源加载为协程加载，只有当Lua脚本文件加载完毕时在执行Lua相关函数</span><br></pre></td></tr></table></figure><h1 id="LuaBehaviour"><a href="#LuaBehaviour" class="headerlink" title="LuaBehaviour"></a>LuaBehaviour</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> XLua;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LuaBehaviour</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> LuaEnv m_LuaEnv = Manager.Lua.luaEnv;</span><br><span class="line">    <span class="keyword">protected</span> LuaTable m_ScriptEnv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Action m_LuaUpdate;</span><br><span class="line">    <span class="keyword">private</span> Action m_LuaInit;</span><br><span class="line">    <span class="keyword">private</span> Action m_LuaOnDestory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> luaName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_ScriptEnv = m_LuaEnv.NewTable();</span><br><span class="line">        <span class="comment">//为每个脚本设置一个独立的环境，</span></span><br><span class="line">        <span class="comment">//可在一定程度防止脚本之间全局变量函数冲突</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> meta = m_LuaEnv.NewTable();</span><br><span class="line">        meta.Set(<span class="string">&quot;__index&quot;</span>, m_LuaEnv.Global);</span><br><span class="line">        m_ScriptEnv.SetMetaTable(meta);</span><br><span class="line">        meta.Dispose();</span><br><span class="line"></span><br><span class="line">        m_ScriptEnv.Set(<span class="string">&quot;self&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">             </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Init</span>(<span class="params"><span class="built_in">string</span> LuaName</span>)</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">this</span>.luaName= LuaName;</span><br><span class="line">        m_LuaEnv.DoString(Manager.Lua.GetLuaScript(luaName), luaName, m_ScriptEnv);</span><br><span class="line">        <span class="comment">//m_ScriptEnv.Get(&quot;Awake&quot;, out m_LuaAwake);</span></span><br><span class="line">        <span class="comment">//m_ScriptEnv.Get(&quot;Start&quot;, out m_LuaStart);</span></span><br><span class="line">        m_ScriptEnv.Get(<span class="string">&quot;Update&quot;</span>, <span class="keyword">out</span> m_LuaUpdate);</span><br><span class="line">        m_ScriptEnv.Get(<span class="string">&quot;Init&quot;</span>, <span class="keyword">out</span> m_LuaInit);</span><br><span class="line">        m_ScriptEnv.Get(<span class="string">&quot;OnDestroy&quot;</span>, <span class="keyword">out</span> m_LuaOnDestory);</span><br><span class="line">        m_LuaInit?.Invoke();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_LuaUpdate?.Invoke();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Clear</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_LuaOnDestory = <span class="literal">null</span>;</span><br><span class="line">        m_LuaInit = <span class="literal">null</span>;</span><br><span class="line">        m_ScriptEnv?.Dispose();</span><br><span class="line">        m_ScriptEnv= <span class="literal">null</span>;</span><br><span class="line">        m_LuaUpdate = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDestroy</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_LuaOnDestory?.Invoke();</span><br><span class="line">        Clear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnApplicationQuit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UIManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    Dictionary&lt;<span class="built_in">string</span>, GameObject&gt; m_UI = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, GameObject&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OpenUI</span>(<span class="params"><span class="built_in">string</span> uiName,<span class="built_in">string</span> luaName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Debug.Log(&quot;打开UI&quot;);</span></span><br><span class="line">        GameObject ui = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(m_UI.TryGetValue(uiName,<span class="keyword">out</span> ui))</span><br><span class="line">        &#123;</span><br><span class="line">            UILogic uILogic=ui.GetComponent&lt;UILogic&gt;();</span><br><span class="line">            uILogic.OnOpen();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Manager.Resource.LoadUIPrefab(uiName, (Object obj) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            ui=Instantiate(obj) <span class="keyword">as</span> GameObject;</span><br><span class="line">            m_UI.Add(uiName, ui);</span><br><span class="line">            UILogic uILogic=ui.AddComponent&lt;UILogic&gt;();</span><br><span class="line">            uILogic.Init(luaName);</span><br><span class="line">            uILogic.OnOpen();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="xlua引用C-接口"><a href="#xlua引用C-接口" class="headerlink" title="xlua引用C#接口"></a>xlua引用C#接口</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Manager = CS.Manager;</span><br><span class="line">PathUtil = CS.PathUtil</span><br><span class="line">Vector3= CS.UnityEngine.Vector3</span><br><span class="line">Input = CS.UnityEngine.Input</span><br><span class="line">KeyCode = CS.UnityEngine.KeyCode</span><br><span class="line">Time = CS.UnityEngine.Time</span><br><span class="line"><span class="keyword">local</span> ui_group =</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;Main&quot;</span>,</span><br><span class="line"><span class="string">&quot;UI&quot;</span>,</span><br><span class="line"><span class="string">&quot;Box&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> entity_group =</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;Player&quot;</span>,</span><br><span class="line"><span class="string">&quot;Monster&quot;</span>,</span><br><span class="line"><span class="string">&quot;Effect&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">--设置UI分组</span></span><br><span class="line">Manager.UI:SetUIGroup(ui_group)</span><br><span class="line">Manager.Entity:SetEntityGroup(entity_group)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Main</span><span class="params">()</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello Word&quot;</span>)</span><br><span class="line"><span class="comment">--Manager.UI:OpenUI(&quot;TestButton 1&quot;,&quot;UI&quot;,&quot;ui.TestUI&quot;)</span></span><br><span class="line">Manager.Scene:ChangeScene(<span class="string">&quot;Scene1&quot;</span>,<span class="string">&quot;scene.Scene01&quot;</span>)</span><br><span class="line"><span class="comment">--Manager.UI:OpenUI(&quot;TestButton&quot;,&quot;Main&quot;,&quot;ui.TestUI&quot;)</span></span><br><span class="line"><span class="comment">--Manager.UI:OpenUI(&quot;TestButton 2&quot;,&quot;UI&quot;,&quot;ui.TestUI&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--Main()</span></span><br></pre></td></tr></table></figure><h1 id="场景管理"><a href="#场景管理" class="headerlink" title="场景管理"></a>场景管理</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MySceneManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> m_LocalName = <span class="string">&quot;[SceneLogic]&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SceneManager.activeSceneChanged += OnActiveSceneChange;</span><br><span class="line">        <span class="comment">//ChangeScene(&quot;Scene1&quot;, &quot;scene.Scene01&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnActiveSceneChange</span>(<span class="params">Scene s1, Scene s2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!s1.isLoaded || !s2.isLoaded)</span><br><span class="line">        &#123;</span><br><span class="line">            UnityEngine.Debug.LogWarning</span><br><span class="line">                (s1.path + <span class="string">&quot;:&quot;</span> +s1.isLoaded + <span class="string">&quot;  &quot;</span> + s2.path + <span class="string">&quot;:&quot;</span> +s2.isLoaded);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//SceneLogic logic1 = GetSceneLogic(s1);</span></span><br><span class="line">        SceneLogic logic2 = GetSceneLogic(s2);</span><br><span class="line">        <span class="comment">//logic1?.OnInActive();</span></span><br><span class="line">        logic2?.OnActive();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetActive</span>(<span class="params"><span class="built_in">string</span> sceneName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Scene scene = SceneManager.GetSceneByName(sceneName);</span><br><span class="line">        SceneManager.SetActiveScene(scene);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 判断场景是否已经加载</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsLoadedScene</span>(<span class="params"><span class="built_in">string</span> sceneName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Scene scene = SceneManager.GetSceneByName(sceneName);</span><br><span class="line">        <span class="keyword">return</span> scene.isLoaded;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 加载新场景</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadScene</span>(<span class="params"><span class="built_in">string</span> sceneName, <span class="built_in">string</span> luaName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Manager.Resource.LoadScene(sceneName, (UnityEngine.Object obj) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            StartCoroutine(StartLoadScene(sceneName, luaName, LoadSceneMode.Additive));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>切换场景</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeScene</span>(<span class="params"><span class="built_in">string</span> sceneName, <span class="built_in">string</span> luaName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Manager.Resource.LoadScene(sceneName, (UnityEngine.Object obj) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            StartCoroutine(StartLoadScene(sceneName, luaName, LoadSceneMode.Single));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 卸载场景</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnloadSceneAsync</span>(<span class="params"><span class="built_in">string</span> sceneName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        StartCoroutine(UnLoadScene(sceneName));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">IEnumerator <span class="title">StartLoadScene</span>(<span class="params"><span class="built_in">string</span> sceneName, <span class="built_in">string</span> luaName, LoadSceneMode mode</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsLoadedScene(sceneName))</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">break</span>;</span><br><span class="line">        AsyncOperation <span class="keyword">async</span> = SceneManager.LoadSceneAsync(sceneName, mode);</span><br><span class="line">        <span class="keyword">async</span>.allowSceneActivation = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">async</span>;</span><br><span class="line">        Scene scene = SceneManager.GetSceneByName(sceneName);</span><br><span class="line">        GameObject go = <span class="keyword">new</span> GameObject(m_LocalName);</span><br><span class="line">        SceneManager.MoveGameObjectToScene(go, scene);</span><br><span class="line">        SceneLogic logic = go.AddComponent&lt;SceneLogic&gt;();</span><br><span class="line">        logic.SceneName = sceneName;</span><br><span class="line">        logic.Init(luaName);</span><br><span class="line">        logic.OnEnter();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">IEnumerator <span class="title">UnLoadScene</span>(<span class="params"><span class="built_in">string</span> sceneName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Scene scene = SceneManager.GetSceneByName(sceneName);</span><br><span class="line">        <span class="keyword">if</span> (!scene.isLoaded)</span><br><span class="line">        &#123;</span><br><span class="line">            UnityEngine.Debug.LogErrorFormat(<span class="string">&quot;Scene:&#123;0&#125; Is Not Load&quot;</span>, sceneName);</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        SceneLogic logic = GetSceneLogic(scene);</span><br><span class="line">        logic?.OnQuit();</span><br><span class="line">        AsyncOperation <span class="keyword">async</span> = SceneManager.UnloadSceneAsync(sceneName);</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">async</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> SceneLogic <span class="title">GetSceneLogic</span>(<span class="params">Scene scene</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        GameObject[] gameObjects = scene.GetRootGameObjects();</span><br><span class="line">        <span class="keyword">foreach</span> (GameObject gameObject <span class="keyword">in</span> gameObjects)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (gameObject.name.CompareTo(m_LocalName) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                SceneLogic logic = gameObject.GetComponent&lt;SceneLogic&gt;();</span><br><span class="line">                <span class="keyword">return</span> logic;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="声音管理"><a href="#声音管理" class="headerlink" title="声音管理"></a>声音管理</h1><p><img src="/../images/image-20230304161627209.png" alt="image-20230304161627209"></p><p><img src="/../images/image-20230304195439637.png" alt="image-20230304195439637"></p><p>没有可以绑定float为参数的配置需要进行添加</p><p><img src="/../images/image-20230304195828033.png" alt="image-20230304195828033"></p><p><img src="/../images/image-20230304200039601.png" alt="image-20230304200039601"></p><h1 id="Callback名单"><a href="#Callback名单" class="headerlink" title="Callback名单"></a>Callback名单</h1><p><img src="/../images/image-20230304203553452.png" alt="image-20230304203553452"></p><h1 id="扩展方法"><a href="#扩展方法" class="headerlink" title="扩展方法"></a>扩展方法</h1><p><img src="/../images/image-20230306101358204.png" alt="image-20230306101358204"></p><p>C#首先dispose但是Lua还在监听C#的事件，会报错</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnChickSet</span>(<span class="params"><span class="keyword">this</span> Button button, <span class="built_in">object</span> callback</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       LuaFunction function=callback <span class="keyword">as</span> LuaFunction;</span><br><span class="line">       button.onClick.RemoveAllListeners();</span><br><span class="line">       button.onClick.AddListener(() =&gt;</span><br><span class="line">       &#123;</span><br><span class="line">           function?.Call();</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnValueChangeSet</span>(<span class="params"><span class="keyword">this</span> Slider slider, <span class="built_in">object</span> callback</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       LuaFunction function=callback <span class="keyword">as</span> LuaFunction;</span><br><span class="line">       slider.onValueChanged.RemoveAllListeners();</span><br><span class="line">       slider.onValueChanged.AddListener((<span class="built_in">float</span> <span class="keyword">value</span>) =&gt;</span><br><span class="line">       &#123;</span><br><span class="line">           function?.Call(<span class="keyword">value</span>);</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>修改为这样使用的就是lua中的方法</p><p>调用：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">play_Music:OnChickSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">Manager.Sound:PlayMusic(<span class="string">&quot;kiss.mp3&quot;</span>);</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line">pause_Music:OnChickSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">Manager.Sound:OnPauseMusic();</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line">unpause_Music:OnChickSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">Manager.Sound:OnUnPauseMusic();</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line">stop_Music:OnChickSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">Manager.Sound:StopMusic();</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line">play_Sound:OnChickSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">Manager.Sound:PlaySound(<span class="string">&quot;ui_touch.wav&quot;</span>);</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line">music_V:OnValueChangeSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">(volume)</span></span></span><br><span class="line">Manager.Sound:SetMusicVolue(volume)</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line">sound_V:OnValueChangeSet(</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">(volume)</span></span></span><br><span class="line">Manager.Sound:SetSoundVolue(volume)</span><br><span class="line"><span class="keyword">end</span>)</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230306102904772.png" alt="image-20230306102904772"></p><p>对于拓展方法必须加上<code>LuaCallCSharp</code>才能使用</p><h1 id="对象池"><a href="#对象池" class="headerlink" title="对象池"></a>对象池</h1><p><img src="/../images/image-20230306103612103.png" alt="image-20230306103612103"></p><p>可存放多种物品</p><p><img src="/../images/image-20230306103623397.png" alt="image-20230306103623397"></p><p>对象池对象</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PoolObject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Object Object;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">    <span class="comment">//最后一次使用时间,用于销毁</span></span><br><span class="line">    <span class="keyword">public</span> System.DateTime LastUseTime;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PoolObject</span>(<span class="params"><span class="built_in">string</span> name, Object obj</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">        Object= obj;</span><br><span class="line">        LastUseTime =System.DateTime.Now;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>针对有两种不同的对象：游戏对象和Bundle1对象，需要抽象父类</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PoolBase</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//自动释放时间/秒</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> m_ReleaseTime;</span><br><span class="line">    <span class="comment">//上次释放资源的时间/毫微秒 1s=1e7毫微秒</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">long</span> m_LastReleaseTime = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;PoolObject&gt; m_Objects;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_LastReleaseTime = System.DateTime.Now.Ticks;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 初始化</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;time&quot;&gt;</span>初始化时间<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init</span>(<span class="params"><span class="built_in">float</span> ReleaseTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_ReleaseTime = ReleaseTime;</span><br><span class="line">        m_Objects = <span class="keyword">new</span> List&lt;PoolObject&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 取出对象</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;name&quot;&gt;</span>对象名<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> Object <span class="title">Spwan</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (PoolObject obj <span class="keyword">in</span> m_Objects)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.Name == name)</span><br><span class="line">            &#123;</span><br><span class="line">                m_Objects.Remove(obj);</span><br><span class="line">                <span class="keyword">return</span> (Object)obj.Object;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 回收对象</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;name&quot;&gt;</span>对象名<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;obj&quot;&gt;</span>对象实体<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">UnSpwan</span>(<span class="params"><span class="built_in">string</span> name,Object obj</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        PoolObject o=<span class="keyword">new</span> PoolObject(name,obj);</span><br><span class="line">        m_Objects.Add(o)  ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 释放资源</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Release</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(System.DateTime.Now.Ticks-m_LastReleaseTime&gt;=m_ReleaseTime*<span class="number">1e7</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_LastReleaseTime=System.DateTime.Now.Ticks; </span><br><span class="line">            Release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对象池功能：存取释放销毁</p><p>游戏对象对象池类</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameObjectPool</span> : <span class="title">PoolBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Object <span class="title">Spwan</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">object</span> obj = <span class="keyword">base</span>.Spwan(name);</span><br><span class="line">        <span class="keyword">if</span>(obj==<span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        GameObject go=obj <span class="keyword">as</span> GameObject;</span><br><span class="line">        go.SetActive(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> go;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">UnSpwan</span>(<span class="params"><span class="built_in">string</span> name, Object obj</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        GameObject go = obj <span class="keyword">as</span> GameObject;</span><br><span class="line">        go.SetActive(<span class="literal">false</span>);</span><br><span class="line">        go.transform.SetParent(<span class="keyword">this</span>.transform, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">base</span>.UnSpwan(name, obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Release</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Release();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> m_Objects)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(System.DateTime.Now.Ticks - item.LastUseTime.Ticks&gt;=m_ReleaseTime*<span class="number">1e7</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogFormat(<span class="string">&quot;GameObjectPoo Release Obj:&#123;0&#125;&quot;</span>,item.Name);</span><br><span class="line">                Destroy((Object)item.Object);</span><br><span class="line">                m_Objects.Remove(item);</span><br><span class="line">                Release();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他文件对象池类</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AssetPool</span> : <span class="title">PoolBase</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Object <span class="title">Spwan</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">base</span>.Spwan(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">UnSpwan</span>(<span class="params"><span class="built_in">string</span> name, Object obj</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.UnSpwan(name, obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Release</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Release();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> m_Objects)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (System.DateTime.Now.Ticks - item.LastUseTime.Ticks &gt;= m_ReleaseTime * <span class="number">1e7</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogFormat(<span class="string">&quot;AssetPool Release Obj:&#123;0&#125;&quot;</span>, item.Name);</span><br><span class="line">                Manager.Resource.UnLoadBundle(name);</span><br><span class="line">                m_Objects.Remove(item);</span><br><span class="line">                Release();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="资源卸载"><a href="#资源卸载" class="headerlink" title="资源卸载"></a>资源卸载</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只有当使用此资源的对象都被销毁时才能进行资源卸载</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230306172633604.png" alt="image-20230306172633604"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当bundle被使用时，放入Asset Bundles，AssetBundle存放正在使用的Bundle，当引用对象小于等于0时，放入AssetPool，经过一段时间进行销毁或继续被使用</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20230306173107250.png" alt="image-20230306173107250"></p><p>加载资源：首先在AssetBundles字典中寻找，不存在则在对象池中寻找，对象池中不存在则进行加载</p><p>卸载资源：当游戏对象被销毁时将所使用的资源，和其依赖资源，加到对象池中，在对象池中经过销毁时间后卸载bundle</p><h1 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h1><p><img src="/../images/image-20230306212237748.png" alt="image-20230306212237748"></p><h2 id="编译Xlua第三方库"><a href="#编译Xlua第三方库" class="headerlink" title="编译Xlua第三方库"></a>编译Xlua第三方库</h2><p>将</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">DllImport(LUADLL, CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">luaopen_rapidjson</span>(<span class="params">System.IntPtr L</span>)</span>;</span><br><span class="line"></span><br><span class="line">       [<span class="meta">MonoPInvokeCallback(typeof(LuaDLL.lua_CSFunction))</span>]</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">LoadRapidJson</span>(<span class="params">System.IntPtr L</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">return</span> luaopen_rapidjson(L);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>加到LuaDLL.cs上</p><p><img src="/../images/image-20230306213301201.png" alt="image-20230306213301201"></p><p>为Lua虚拟机添加<code>luaEnv.AddBuildin(&quot;rapidjson&quot;, XLua.LuaDLL.Lua.LoadRapidJson);</code></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> rapidjson = <span class="built_in">require</span>(<span class="string">&#x27;rapidjson&#x27;</span>)  </span><br><span class="line"><span class="keyword">local</span> t = rapidjson.decode(<span class="string">&#x27;&#123;&quot;a&quot;:123&#125;&#x27;</span>) <span class="comment">--将json转为Lua可识别的信息</span></span><br><span class="line"><span class="built_in">print</span>(t.a)</span><br><span class="line">t.a = <span class="number">456</span></span><br><span class="line"><span class="keyword">local</span> s = rapidjson.encode(t)        <span class="comment">--将信息转回Lua</span></span><br></pre></td></tr></table></figure><h2 id="网络客户端C-部分"><a href="#网络客户端C-部分" class="headerlink" title="网络客户端C#部分"></a>网络客户端C#部分</h2><h3 id="NetClient"><a href="#NetClient" class="headerlink" title="NetClient"></a>NetClient</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NetClient</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//Tcp给客户端使用的</span></span><br><span class="line">    <span class="keyword">private</span> TcpClient m_Client;</span><br><span class="line">    <span class="comment">//从TcpClient能够获取到的网路流，用于传输数据，只能用于TCP-IP</span></span><br><span class="line">    <span class="comment">//不能用于UDP</span></span><br><span class="line">    <span class="keyword">private</span> NetworkStream m_TcpStream;</span><br><span class="line">    <span class="comment">//接受数据的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> BufferSize = <span class="number">1024</span> * <span class="number">64</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">byte</span>[] m_Buffer=<span class="keyword">new</span> <span class="built_in">byte</span>[BufferSize];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于解析接收到的数据</span></span><br><span class="line">    <span class="keyword">private</span> MemoryStream m_MemStream;</span><br><span class="line">    <span class="keyword">private</span> BinaryReader m_BinaryReader;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NetClient</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_MemStream=<span class="keyword">new</span> MemoryStream();</span><br><span class="line">        m_BinaryReader=<span class="keyword">new</span> BinaryReader(m_MemStream);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnConnectServer</span>(<span class="params"><span class="built_in">string</span> host,<span class="built_in">int</span> port</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Dns.GetHostAddresses:返回指定主机的Internet协议（IP）地址</span></span><br><span class="line">            IPAddress[] addresses = Dns.GetHostAddresses(host);</span><br><span class="line">            <span class="keyword">if</span>(addresses.Length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogErrorFormat(<span class="string">&quot;host:&#123;0&#125;  Invalid&quot;</span>, host);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (addresses[<span class="number">0</span>].AddressFamily== AddressFamily.InterNetworkV6)</span><br><span class="line">            &#123;</span><br><span class="line">                m_Client=<span class="keyword">new</span> TcpClient(AddressFamily.InterNetworkV6);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                m_Client = <span class="keyword">new</span> TcpClient(AddressFamily.InterNetwork);</span><br><span class="line">            m_Client.SendTimeout = <span class="number">1000</span>;</span><br><span class="line">            m_Client.ReceiveTimeout = <span class="number">1000</span>;</span><br><span class="line">            m_Client.NoDelay= <span class="literal">true</span>;</span><br><span class="line">            m_Client.BeginConnect(host,port,OnConnet,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnConnet</span>(<span class="params">IAsyncResult ar</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(m_Client==<span class="literal">null</span>||!m_Client.Connected)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">&quot;connect server error!!!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Manager.Net.OnNetConnected();</span><br><span class="line">        m_TcpStream = m_Client.GetStream();</span><br><span class="line">        m_TcpStream.BeginRead(m_Buffer, <span class="number">0</span>, BufferSize, OnRead, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnRead</span>(<span class="params">IAsyncResult ar</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_Client == <span class="literal">null</span> || m_TcpStream == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//收到的消息长度</span></span><br><span class="line">            <span class="built_in">int</span> length=m_TcpStream.EndRead(ar);</span><br><span class="line">            <span class="comment">//判断长度和连接是否正常</span></span><br><span class="line">            <span class="keyword">if</span>(length &lt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                OnDisConnected();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ReceiveData(length);</span><br><span class="line">            <span class="keyword">lock</span>(m_TcpStream)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//将m_Buffer清空，并继续读取</span></span><br><span class="line">                Array.Clear(m_Buffer,<span class="number">0</span>,m_Buffer.Length);</span><br><span class="line">                <span class="comment">//重新读取新的数据</span></span><br><span class="line">                m_TcpStream.BeginRead(m_Buffer,<span class="number">0</span>,BufferSize,OnRead,<span class="literal">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(e);</span><br><span class="line">            OnDisConnected();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 断开连接</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisConnected</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(m_Client!=<span class="literal">null</span> &amp;&amp; m_Client.Connected)</span><br><span class="line">        &#123;</span><br><span class="line">            m_Client.Close();</span><br><span class="line">            m_Client = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            m_TcpStream.Close();</span><br><span class="line">            m_TcpStream = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Manager.Net.OnDisConnected();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 解析数据</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ReceiveData</span>(<span class="params"><span class="built_in">int</span> length</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//先移动到最后</span></span><br><span class="line">        m_MemStream.Seek(<span class="number">0</span>, SeekOrigin.End);</span><br><span class="line">        <span class="comment">//添加数据</span></span><br><span class="line">        m_MemStream.Write(m_Buffer, <span class="number">0</span>, length);</span><br><span class="line">        <span class="comment">//在移动回去</span></span><br><span class="line">        m_MemStream.Seek(<span class="number">0</span>, SeekOrigin.Begin);</span><br><span class="line">        <span class="comment">//剩余字节数&gt;=8说明消息是完整的</span></span><br><span class="line">        <span class="keyword">while</span>(RemainingBytesLength()&gt;=<span class="number">8</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> msgId=m_BinaryReader.ReadInt32();</span><br><span class="line">            <span class="built_in">int</span> msgLen = m_BinaryReader.ReadInt32();</span><br><span class="line">            <span class="keyword">if</span>(RemainingBytesLength()&gt;=msgLen) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[]data = m_BinaryReader.ReadBytes(msgLen);</span><br><span class="line">                <span class="comment">//从服务器传递过来的信息为json</span></span><br><span class="line">                <span class="built_in">string</span> message=System.Text.Encoding.UTF8.GetString(data);</span><br><span class="line">                <span class="comment">//转到Lua</span></span><br><span class="line">                Manager.Net.Receive(msgId, message);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//将8个字节还回，信息不完整</span></span><br><span class="line">                m_MemStream.Position = m_MemStream.Position - <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">byte</span>[] leftover = m_BinaryReader.ReadBytes(RemainingBytesLength());</span><br><span class="line">        m_MemStream.SetLength(<span class="number">0</span>);</span><br><span class="line">        m_MemStream.Write(leftover, <span class="number">0</span>, leftover.Length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 剩余字节数</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">RemainingBytesLength</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">int</span>)(m_MemStream.Length - m_MemStream.Position);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendMessage</span>(<span class="params"><span class="built_in">int</span> msgId,<span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms=<span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            ms.Position = <span class="number">0</span>;</span><br><span class="line">            BinaryWriter bw=<span class="keyword">new</span> BinaryWriter(ms);</span><br><span class="line">            <span class="built_in">byte</span>[] data=System.Text.Encoding.UTF8.GetBytes(message);</span><br><span class="line">            <span class="comment">//协议Id</span></span><br><span class="line">            bw.Write(msgId);</span><br><span class="line">            <span class="comment">//消息长度</span></span><br><span class="line">            bw.Write((<span class="built_in">int</span>)data.Length);</span><br><span class="line">            <span class="comment">//消息内容</span></span><br><span class="line">            bw.Write(data);</span><br><span class="line">            bw.Flush();</span><br><span class="line">            <span class="keyword">if</span> (m_Client != <span class="literal">null</span> &amp;&amp; m_Client.Connected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] sendData=ms.ToArray();</span><br><span class="line">                <span class="comment">//BeginWrite相当于Send 发送成功调用OnEndSend回调</span></span><br><span class="line">                m_TcpStream.BeginWrite(sendData, <span class="number">0</span>, sendData.Length, OnEndSend, <span class="literal">null</span>); ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;服务器未连接&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEndSend</span>(<span class="params">IAsyncResult ar</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_TcpStream.EndWrite(ar);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            OnDisConnected();</span><br><span class="line">            Debug.LogException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LuaManager"><a href="#LuaManager" class="headerlink" title="LuaManager"></a>LuaManager</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"><span class="keyword">using</span> UObject = UnityEngine.Object;</span><br><span class="line"><span class="keyword">using</span> XLua;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LuaManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 所有Lua文件文件名</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">string</span>&gt; LuaNames = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    <span class="keyword">private</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">byte</span>[]&gt; m_LuaScripts = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">byte</span>[]&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LuaEnv luaEnv;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        luaEnv = <span class="keyword">new</span> LuaEnv();</span><br><span class="line"></span><br><span class="line">        luaEnv.AddBuildin(<span class="string">&quot;rapidjson&quot;</span>, XLua.LuaDLL.Lua.LoadRapidJson);</span><br><span class="line"></span><br><span class="line">        luaEnv.AddLoader(<span class="keyword">this</span>.loader);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">        <span class="keyword">if</span> (AppConst.gameMode == GameMode.EditorMode)</span><br><span class="line">            <span class="keyword">this</span>.EditorLoadLuaScript();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">            <span class="keyword">this</span>.LoadLuaScript();</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StartLua</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.luaEnv.DoString(<span class="built_in">string</span>.Format(<span class="string">&quot;require &#x27;&#123;0&#125;&#x27;&quot;</span>, name));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.luaEnv != <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">this</span>.luaEnv.Tick();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDestroy</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.luaEnv != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.luaEnv.Dispose();</span><br><span class="line">            <span class="keyword">this</span>.luaEnv = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">byte</span>[]loader(<span class="keyword">ref</span> <span class="built_in">string</span> name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.GetLuaScript(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">byte</span>[] <span class="title">GetLuaScript</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        name = name.Replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="built_in">string</span> fileName = PathUtil.GetLuaPath(name);</span><br><span class="line">        <span class="built_in">byte</span>[] luaScript = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.m_LuaScripts.TryGetValue(fileName, <span class="keyword">out</span> luaScript))</span><br><span class="line">            Debug.LogErrorFormat(<span class="string">&quot;LuaManager-&gt;GetLuaScript fileName:&#123;0&#125; Not Exist&quot;</span>, fileName);</span><br><span class="line">        <span class="keyword">return</span> luaScript;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 编辑器模式下加载Lua文件</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">EditorLoadLuaScript</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span>[] luaFiles = Directory.GetFiles(PathUtil.LuaPath, <span class="string">&quot;*.bytes&quot;</span>, SearchOption.AllDirectories);</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;luaFiles.Length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> fileName = PathUtil.GetStandardPath(luaFiles[i]);</span><br><span class="line">            <span class="built_in">byte</span>[] file = File.ReadAllBytes(fileName);</span><br><span class="line">            AddLuaScript(PathUtil.GetUnityPath(fileName), file);</span><br><span class="line">        &#125;</span><br><span class="line">        Manager.Event.Fire(<span class="number">10000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddLuaScript</span>(<span class="params"><span class="built_in">string</span> assetsName, <span class="built_in">byte</span>[] file</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.m_LuaScripts[assetsName] = file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LoadLuaScript</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="built_in">string</span> name <span class="keyword">in</span> <span class="keyword">this</span>.LuaNames)</span><br><span class="line">        &#123;</span><br><span class="line">            Manager.Resource.LoadLua(name, </span><br><span class="line">                (UObject obj) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.AddLuaScript(name, (obj <span class="keyword">as</span> TextAsset).bytes);</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.m_LuaScripts.Count&gt;=<span class="keyword">this</span>.LuaNames.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    Manager.Event.Fire(<span class="number">10000</span>);</span><br><span class="line">                    LuaNames.Clear();</span><br><span class="line">                    LuaNames = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网络客户端Lua部分"><a href="#网络客户端Lua部分" class="headerlink" title="网络客户端Lua部分"></a>网络客户端Lua部分</h2><p><img src="/../images/image-20230308082605820.png" alt="image-20230308082605820"></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--模拟Class基类</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class</span><span class="params">(super)</span></span></span><br><span class="line">    <span class="keyword">local</span> class = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">if</span> super <span class="keyword">then</span></span><br><span class="line">       class = <span class="built_in">setmetatable</span>(&#123;&#125;, &#123;<span class="built_in">__index</span> = super&#125;)</span><br><span class="line">       class.super = super</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       class = &#123;ctor = <span class="function"><span class="keyword">function</span><span class="params">()</span></span> <span class="keyword">end</span>&#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    class.<span class="built_in">__index</span> = class</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">class.new</span><span class="params">(...)</span></span></span><br><span class="line">       <span class="keyword">local</span> instance = <span class="built_in">setmetatable</span>(&#123;&#125;, class)</span><br><span class="line">       <span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">(inst, ...)</span></span></span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">type</span>(inst.super) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">create</span>(inst.super, ...);</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">type</span>(inst.ctor) == <span class="string">&quot;function&quot;</span> <span class="keyword">then</span></span><br><span class="line">                inst.ctor(instance, ...);</span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">       <span class="built_in">create</span>(instance, ...);</span><br><span class="line">       <span class="keyword">return</span> instance</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> class;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Lua网络消息基类</span></span><br><span class="line"><span class="keyword">local</span> base_msg = Class();</span><br><span class="line"></span><br><span class="line"><span class="comment">--消息注册</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">base_msg:add_req_res</span><span class="params">(msg_name,msg_id,...)</span></span></span><br><span class="line"><span class="comment">--参数列表</span></span><br><span class="line"><span class="keyword">local</span> keys = &#123;...&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--消息请求</span></span><br><span class="line"><span class="built_in">self</span>[<span class="string">&quot;req_&quot;</span>..msg_name] = <span class="function"><span class="keyword">function</span><span class="params">(self,... )</span></span></span><br><span class="line"><span class="keyword">local</span> values = &#123;...&#125;;</span><br><span class="line"><span class="keyword">if</span> #keys ~= #values <span class="keyword">then</span></span><br><span class="line">Log.Error(<span class="string">&quot;参数不正确：&quot;</span>,msg_name);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> send_data = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span>,#keys <span class="keyword">do</span></span><br><span class="line">send_data[keys[i]] = values[i];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">msg_mgr.send_msg(msg_id,send_data);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--消息接收 如果定义了接受的方法，则执行接受方法</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(<span class="built_in">self</span>[<span class="string">&quot;res_&quot;</span> .. msg_name]) == <span class="string">&quot;function&quot;</span> <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">msg_mgr.register(msg_id,</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">(data)</span></span></span><br><span class="line">            <span class="keyword">local</span> msg = Json.decode(data);</span><br><span class="line">            <span class="keyword">if</span> msg.code ~= <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            Log.Error(<span class="string">&quot;错误码:&quot;</span>,msg.code);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">    <span class="built_in">self</span>[<span class="string">&quot;res_&quot;</span> .. msg_name](<span class="built_in">self</span>,msg);</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Log.Error(<span class="string">&quot;请注册消息返回回调：&quot;</span>..msg_name);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> base_msg;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--Lua网络消息管理器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> msg_mgr = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> msg_model_list = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> msg_responses = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--手动添加每个模块名字</span></span><br><span class="line"><span class="keyword">local</span> msg_name_list = </span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;msg_test&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">msg_mgr.init</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(msg_name_list) <span class="keyword">do</span></span><br><span class="line">msg_model_list[v] = <span class="built_in">require</span>(<span class="string">&quot;message.&quot;</span>..v).new();</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">msg_mgr.get_msg</span><span class="params">(key)</span></span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> msg_model_list[key] <span class="keyword">then</span></span><br><span class="line">Log.Error(<span class="string">&quot;脚本不存在:&quot;</span>..key);</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> msg_model_list[key];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">msg_mgr.register</span><span class="params">(msg_id,func)</span></span></span><br><span class="line"><span class="keyword">if</span> msg_responses[msg_id] <span class="keyword">then</span></span><br><span class="line">Log.Error(<span class="string">&quot;消息已注册:&quot;</span>..msg_id);</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">msg_responses[msg_id] = func;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ReceiveMessage</span><span class="params">(msg_id,message)</span></span></span><br><span class="line">Log.Info(<span class="string">&quot;&lt;color=#A0522D&gt;receive:&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;:id = &quot;</span>..msg_id .. <span class="string">&quot; : &quot;</span>..message..<span class="string">&quot;&lt;/color&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(msg_responses[msg_id]) == <span class="string">&quot;function&quot;</span> <span class="keyword">then</span></span><br><span class="line">msg_responses[msg_id](message);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Log.Error(<span class="string">&quot;此消息没有res：&quot;</span>,msg_id);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">msg_mgr.send_msg</span><span class="params">(msg_id,send_data)</span></span></span><br><span class="line"><span class="keyword">local</span> str = Json.encode(send_data);</span><br><span class="line">Log.Info(<span class="string">&quot;&lt;color=#9400D3&gt;send:&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;:id = &quot;</span>..msg_id..<span class="string">&quot; : &quot;</span>..str..<span class="string">&quot;&lt;/color&gt;&quot;</span>);</span><br><span class="line">Manager.Net:SendMessage(msg_id,str);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> msg_mgr;</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--Log</span></span><br><span class="line"><span class="keyword">local</span> Log = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">read_table</span><span class="params">(tab,tab_count)</span></span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">get_symbol</span><span class="params">(count)</span></span></span><br><span class="line"><span class="keyword">local</span> symol = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span>,count <span class="keyword">do</span></span><br><span class="line">symol = symol .. <span class="string">&quot;    &quot;</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> symol;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> symbol = get_symbol(tab_count);</span><br><span class="line"><span class="keyword">local</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(tab) <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">str = str .. symbol .. k .. <span class="string">&quot;:\n&quot;</span> .. symbol ..<span class="string">&quot;&#123;\n&quot;</span>..read_table(v,tab_count + <span class="number">1</span>)..symbol..<span class="string">&quot;&#125;\n&quot;</span>;</span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">type</span>(v) == <span class="string">&quot;userdata&quot;</span> <span class="keyword">then</span></span><br><span class="line">str = str ..symbol .. k ..  <span class="string">&quot; = userdata,\n&quot;</span>;</span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">type</span>(v) == <span class="string">&quot;function&quot;</span> <span class="keyword">then</span></span><br><span class="line">str = str ..symbol .. k ..  <span class="string">&quot; = function,\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">str = str ..symbol .. k ..  <span class="string">&quot; = &quot;</span> .. <span class="built_in">tostring</span>(v)..<span class="string">&quot;,\n&quot;</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">get_log_string</span><span class="params">(...)</span></span></span><br><span class="line"><span class="keyword">local</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">local</span> pram = &#123;...&#125;;</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(pram) <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(v) == <span class="string">&quot;table&quot;</span> <span class="keyword">then</span></span><br><span class="line">str = str .. <span class="string">&quot;&#123;\n&quot;</span>.. read_table(v,<span class="number">1</span>) ..<span class="string">&quot;&#125;\n&quot;</span>;</span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">type</span>(v) == <span class="string">&quot;function&quot;</span> <span class="keyword">then</span></span><br><span class="line">str = str .. v ..  <span class="string">&quot;function,\n&quot;</span>;</span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">type</span>(v) == <span class="string">&quot;userdata&quot;</span> <span class="keyword">then</span></span><br><span class="line">str = str .. <span class="string">&quot;userdata,\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">str = str .. <span class="built_in">tostring</span>(v) .. <span class="string">&quot;  &quot;</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Log.Info</span><span class="params">(...)</span></span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> AppConst.OpenLog <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">CS.Log.Info(get_log_string(...));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Log.Warning</span><span class="params">(...)</span></span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> AppConst.OpenLog <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">CS.Log.Warning(get_log_string(...));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Log.Error</span><span class="params">(...)</span></span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> AppConst.OpenLog <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> str = get_log_string(...);</span><br><span class="line">CS.Log.Error(str .. <span class="built_in">debug</span>.<span class="built_in">traceback</span>());</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Log;</span><br></pre></td></tr></table></figure><h1 id="真机测试"><a href="#真机测试" class="headerlink" title="真机测试"></a>真机测试</h1><p><img src="/../images/image-20230308160756981.png" alt="image-20230308160756981"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;整包分包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;资源加载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Lua管理&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Xlua" scheme="http://example.com/categories/Xlua/"/>
    
    
    <category term="Xlua" scheme="http://example.com/tags/Xlua/"/>
    
  </entry>
  
  <entry>
    <title>unity文件</title>
    <link href="http://example.com/2023/02/13/unity%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2023/02/13/unity%E6%96%87%E4%BB%B6/</id>
    <published>2023-02-13T13:01:22.000Z</published>
    <updated>2023-02-13T13:52:24.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">一.Resources文件夹。</span><br><span class="line">可以使用Resources.Load(“文件名字，注：不包括文件后缀名”);把文件夹中的对象加载出来。</span><br><span class="line">注：此方可实现对文件实施“增删查改”等操作，但打包后不可以更改了。</span><br><span class="line"></span><br><span class="line">二.Windows平台文件处理</span><br><span class="line">在直接使用Application.dataPath来读取文件进行操作。</span><br><span class="line">注：移动端是没有访问权限的。</span><br><span class="line"></span><br><span class="line">三.StreamingAssets文件夹。</span><br><span class="line">1.可使用Application.dataPath来读取文件进行操作。</span><br><span class="line">2.直接使用Application.streamingAssetsPath来读取文件进行操作。</span><br><span class="line">注：此方法在pc/Mac电脑中可实现对文件实施“增删查改”等操作，但在移动端只支持读取操作。</span><br><span class="line"></span><br><span class="line">四.使用Application.persistentDataPath操作文件</span><br><span class="line">该文件存在手机沙盒中，因为不能直接存放文件，</span><br><span class="line">1.通过服务器直接下载保存到该位置，也可以通过Md5码比对下载更新新的资源</span><br><span class="line">2.没有服务器的，只有间接通过文件流的方式从本地读取并写入Application.persistentDataPath文件下，然后再通过Application.persistentDataPath来读取操作。</span><br><span class="line">注：在Pc/Mac电脑 以及android跟Ipad、ipone都可对文件进行任意操作，另外在IOS上该目录下的东西可以被iCloud自动备份。</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.Resource：在Unity编辑器的Project窗口里创建，Resources文件夹下的资源全部会打包进.apk或者.ipa，并且打包时会将里面的资源压缩处理。加载方法是Resources.Load(文件名)，需要注意：文件名不包括扩展名，打包后不能更改Resources下的资源内容。但是从Resources文件夹中加载出来的资源可以更改。</span><br><span class="line"></span><br><span class="line">2.Application.dataPath：这个属性返回的是程序的数据文件所在文件夹的路径，例如在Editor中就是项目的Assets文件夹的路径，通过这个路径可以访问项目中任何文件夹中的资源，但是在移动端它是完全没用。</span><br><span class="line"></span><br><span class="line">3.Application.streamingAssetsPath：这个属性用于返回流数据的缓存目录，返回路径为相对路径，适合设置一些外部数据文件的路径。在Unity工程的Assets目录下起一个名为“StreamingAssets”的文件夹即可，然后用Application.streamingAssetsPath访问，这个文件夹中的资源在打包时会原封不动的打包进去，不会压缩，一般放置一些资源数据。在PC/MAC中可实现对文件的“增删改查”等操作，但在移动端是一个只读路径。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;一.Resources文件夹。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以使用Resources.Load(“文件名字，注：不包括文件后缀名”);把文件夹中的对象加载出来。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注：此方可实现对文件实施“增删查改”等操作，但打包后不可以更改了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;二.Windows平台文件处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在直接使用Application.dataPath来读取文件进行操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注：移动端是没有访问权限的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;三.StreamingAssets文件夹。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.可使用Application.dataPath来读取文件进行操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.直接使用Application.streamingAssetsPath来读取文件进行操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注：此方法在pc/Mac电脑中可实现对文件实施“增删查改”等操作，但在移动端只支持读取操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;四.使用Application.persistentDataPath操作文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;该文件存在手机沙盒中，因为不能直接存放文件，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.通过服务器直接下载保存到该位置，也可以通过Md5码比对下载更新新的资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.没有服务器的，只有间接通过文件流的方式从本地读取并写入Application.persistentDataPath文件下，然后再通过Application.persistentDataPath来读取操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注：在Pc/Mac电脑 以及android跟Ipad、ipone都可对文件进行任意操作，另外在IOS上该目录下的东西可以被iCloud自动备份。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="文件" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Lua01</title>
    <link href="http://example.com/2023/02/12/Lua01/"/>
    <id>http://example.com/2023/02/12/Lua01/</id>
    <published>2023-02-12T12:32:09.000Z</published>
    <updated>2023-03-08T05:44:12.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="可传函数"><a href="#可传函数" class="headerlink" title="可传函数"></a>可传函数</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(a,b )</span></span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">(ff,a,b )</span></span></span><br><span class="line">    <span class="keyword">return</span> ff(a,b)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span>(f(add,<span class="number">1</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h2 id="可变长度"><a href="#可变长度" class="headerlink" title="可变长度"></a>可变长度</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add</span><span class="params">( ... )</span></span></span><br><span class="line">    <span class="keyword">local</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">local</span> A=&#123;...&#125;</span><br><span class="line">    <span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(A) <span class="keyword">do</span></span><br><span class="line">    sum=sum+v</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>,<span class="number">11</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h2 id="阿斯克吗转字符串"><a href="#阿斯克吗转字符串" class="headerlink" title="阿斯克吗转字符串"></a>阿斯克吗转字符串</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\x66&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="string">&quot;sdf&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">string</span>.<span class="built_in">upper</span>(<span class="string">&quot;fds&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">string</span>.<span class="built_in">upper</span>(b))</span><br><span class="line"><span class="built_in">print</span>(b:<span class="built_in">upper</span>())</span><br><span class="line"><span class="built_in">print</span>(b.<span class="built_in">upper</span>(b))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">A=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</span><br><span class="line"><span class="comment">--正向遍历</span></span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(A) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(i,v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--反向遍历</span></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(A) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k,v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--某位置插入</span></span><br><span class="line"><span class="built_in">table</span>.<span class="built_in">insert</span>(A,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment">--所以位置后插入</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">table</span>.<span class="built_in">concat</span>(A, <span class="number">1</span>))</span><br><span class="line"><span class="comment">--排序</span></span><br><span class="line"><span class="built_in">table</span>.<span class="built_in">sort</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="comment">--从大到小排序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">low</span><span class="params">( a,b )</span></span></span><br><span class="line">    <span class="keyword">return</span> a&gt;b</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">table</span>.<span class="built_in">sort</span>(A,up)</span><br><span class="line"></span><br><span class="line"><span class="comment">--输入的一行  io.lines()</span></span><br><span class="line"><span class="keyword">local</span> a=&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span><span class="params">(a)</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">table</span>.<span class="built_in">concat</span>(a,<span class="string">&quot;+&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">io</span>.<span class="built_in">lines</span>() <span class="keyword">do</span></span><br><span class="line">  a[#a+<span class="number">1</span>]=line</span><br><span class="line">  <span class="built_in">print</span>(x(a))</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--随机数种子</span></span><br><span class="line"><span class="built_in">math</span>.<span class="built_in">randomseed</span>(<span class="built_in">os</span>.<span class="built_in">time</span>())</span><br><span class="line"><span class="comment">--随机数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">math</span>.<span class="built_in">random</span>(<span class="number">1</span>,<span class="number">100</span>))</span><br></pre></td></tr></table></figure><h2 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">关于协程的操作作为基础库的一个子库， 被放在一个独立表 <span class="built_in">coroutine</span> 中。 协程的介绍参见 §<span class="number">2.6</span> 。</span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">create</span> (f)</span><br><span class="line">创建一个主体函数为 f 的新协程。 f 必须是一个 Lua 的函数。 返回这个新协程，它是一个类型为 <span class="string">&quot;thread&quot;</span> 的对象。</span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span> (co [, val1, ···])</span><br><span class="line">开始或继续协程 co 的运行。 当你第一次延续一个协程，它会从主体函数处开始运行。 val1, ... 这些值会以参数形式传入主体函数。 如果该协程被让出，<span class="built_in">resume</span> 会重新启动它； val1, ... 这些参数会作为让出点的返回值。</span><br><span class="line"></span><br><span class="line">如果协程运行起来没有错误， <span class="built_in">resume</span> 返回 <span class="literal">true</span> 加上传给 <span class="built_in">yield</span> 的所有值 （当协程让出）， 或是主体函数的所有返回值（当协程中止）。 如果有任何错误发生， <span class="built_in">resume</span> 返回 <span class="literal">false</span> 加错误消息。</span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">yield</span> (···)</span><br><span class="line">挂起正在调用的协程的执行。 传递给 <span class="built_in">yield</span> 的参数都会转为 <span class="built_in">resume</span> 的额外返回值。</span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">wrap</span> (f)</span><br><span class="line">创建一个主体函数为 f 的新协程。 f 必须是一个 Lua 的函数。 返回一个函数， 每次调用该函数都会延续该协程。 传给这个函数的参数都会作为 <span class="built_in">resume</span> 的额外参数。 和 <span class="built_in">resume</span> 返回相同的值， 只是没有第一个布尔量。 如果发生任何错误，抛出这个错误。</span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">status</span> (co)</span><br><span class="line">以字符串形式返回协程 co 的状态： 当协程正在运行（它就是调用 <span class="built_in">status</span> 的那个） ，返回 <span class="string">&quot;running&quot;</span>； 如果协程调用 <span class="built_in">yield</span> 挂起或是还没有开始运行，返回 <span class="string">&quot;suspended&quot;</span>； 如果协程是活动的，但并不在运行（即它正在延续其它协程），返回 <span class="string">&quot;normal&quot;</span>； 如果协程运行完主体函数或因错误停止，返回 <span class="string">&quot;dead&quot;</span>。</span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.isyieldable ()</span><br><span class="line">如果正在运行的协程可以让出，则返回真。</span><br><span class="line"></span><br><span class="line">不在主线程中或不在一个无法让出的 C 函数中时，当前协程是可让出的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">running</span> ()</span><br><span class="line">返回当前正在运行的协程加一个布尔量。 如果当前运行的协程是主线程，其为真。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="协程创建执行与返回"><a href="#协程创建执行与返回" class="headerlink" title="协程创建执行与返回"></a>协程创建执行与返回</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建运行协程</span></span><br><span class="line"><span class="comment">--[[coroutine.create (f)</span></span><br><span class="line"><span class="comment">创建一个主体函数为 f 的新协程。 f 必须是一个 Lua 的函数。 返回这个新协程，它是一个类型为 &quot;thread&quot; 的对象。]]</span></span><br><span class="line">co= <span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">( ... )</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;coroutine is running...&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(co)</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span>(co)</span><br><span class="line"></span><br><span class="line"><span class="comment">--返回值 coroutine.yield() 返回后再次执行时从返回处开始执行</span></span><br><span class="line">co= <span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">( ... )</span></span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;start&quot;</span>)</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">yield</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;coroutine1 is running...&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="协程传参返回值"><a href="#协程传参返回值" class="headerlink" title="协程传参返回值"></a>协程传参返回值</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--传参  coroutine.resume(co,1,2,3,41,1)</span></span><br><span class="line">co= <span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">(...)</span></span></span><br><span class="line"><span class="keyword">local</span> a = &#123;...&#125;</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">        <span class="keyword">for</span> i,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(a) <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">print</span>(i,v)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span>(co,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">41</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment">--返回值  返回的第一个值为执行成功与否</span></span><br><span class="line">co= <span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">(...)</span></span></span><br><span class="line">    <span class="built_in">coroutine</span>.<span class="built_in">yield</span>(<span class="string">&quot;saf&quot;</span>,<span class="number">123</span>,dffs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line">a,b ,c,d= <span class="built_in">coroutine</span>.<span class="built_in">resume</span>(co,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">41</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(a,b,c,d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--注意传值时第二次传值不会进行覆盖</span></span><br><span class="line">co= <span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">(a,b)</span></span></span><br><span class="line">    <span class="built_in">print</span>(a,b)</span><br><span class="line">    c,d = <span class="built_in">coroutine</span>.<span class="built_in">yield</span>(a,b)</span><br><span class="line">    <span class="built_in">print</span>(a,b)</span><br><span class="line">    <span class="built_in">print</span>(c,d)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span>(co,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span>(co,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--使用coroutine.wrap创建的协程 返回值为function</span></span><br><span class="line"><span class="comment">--创建一个主体函数为 f 的新协程。 f 必须是一个 Lua 的函数。 返回一个函数， 每次调用该函数都会延续该协程。 传给这个函数的参数都会作为 resume 的额外参数。 和 resume 返回相同的值， 只是没有第一个布尔量。 如果发生任何错误，抛出这个错误。</span></span><br><span class="line">co= <span class="built_in">coroutine</span>.<span class="built_in">wrap</span>(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">(a,b)</span></span></span><br><span class="line">    <span class="built_in">print</span>(a,b)</span><br><span class="line">    c,d=<span class="built_in">coroutine</span>.<span class="built_in">yield</span>(a,b)</span><br><span class="line">    <span class="built_in">print</span>(a,b)</span><br><span class="line">    <span class="built_in">print</span>(c,d)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(co))</span><br><span class="line">co(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">co(<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> monster =&#123;</span><br><span class="line">    name=<span class="string">&quot;monster&quot;</span>,</span><br><span class="line">    Hp=<span class="number">100</span>,</span><br><span class="line">    pos=&#123;x=<span class="number">100</span>,y=<span class="number">200</span>&#125;,</span><br><span class="line">    <span class="string">[[</span></span><br><span class="line"><span class="string">    TakeDamage=function(self,demage)</span></span><br><span class="line"><span class="string">        self.Hp=self.Hp-demage</span></span><br><span class="line"><span class="string">        end</span></span><br><span class="line"><span class="string">    ]]</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(monster.Hp)</span><br><span class="line"><span class="comment">--定义函数加上self变量</span></span><br><span class="line">monster.TakeDamage=<span class="function"><span class="keyword">function</span><span class="params">(self,demage)</span></span></span><br><span class="line">        <span class="built_in">self</span>.Hp=<span class="built_in">self</span>.Hp-demage</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="string">[[</span></span><br><span class="line"><span class="string">使用语法糖改编 默认有self</span></span><br><span class="line"><span class="string">function monster:TakeDamage(demage)</span></span><br><span class="line"><span class="string">        self.Hp=self.Hp-demage</span></span><br><span class="line"><span class="string">        end</span></span><br><span class="line"><span class="string">]]</span></span><br><span class="line"></span><br><span class="line">monster.TakeDamage(monster,<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(monster.Hp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> monster1 =&#123;</span><br><span class="line">    name=<span class="string">&quot;monster&quot;</span>,</span><br><span class="line">    Hp=<span class="number">120</span>,</span><br><span class="line">    pos=&#123;x=<span class="number">100</span>,y=<span class="number">200</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">--可进行传值</span></span><br><span class="line">monster.TakeDamage(monster1,<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(monster1.Hp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--语法糖：将自身作为函数的第一个参数传入</span></span><br><span class="line">monster:TakeDamage(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--直接赋值为地址引用</span></span><br><span class="line"><span class="keyword">local</span> monster1 = monster</span><br><span class="line">monster1:TakeDamage(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(monster.Hp) <span class="comment">--输出为 0 </span></span><br></pre></td></tr></table></figure><h1 id="元表"><a href="#元表" class="headerlink" title="元表"></a>元表</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--meta table 元表 原型</span></span><br><span class="line"></span><br><span class="line">monster =&#123;</span><br><span class="line">    name=<span class="string">&quot;monster&quot;</span>,</span><br><span class="line">    Hp=<span class="number">100</span>,</span><br><span class="line">    pos=&#123;x=<span class="number">100</span>,y=<span class="number">200</span>&#125;,</span><br><span class="line">    TakeDamage=<span class="function"><span class="keyword">function</span><span class="params">(self,demage)</span></span></span><br><span class="line">        <span class="built_in">self</span>.Hp=<span class="built_in">self</span>.Hp-demage</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">objMonster=&#123;x=<span class="number">1</span>,y=<span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">setmetatable</span>(objMonster, &#123;<span class="built_in">__index</span>=monster&#125;)</span><br><span class="line">objMonster:TakeDamage(<span class="number">11</span>)</span><br><span class="line"><span class="built_in">print</span>(objMonster.Hp)</span><br><span class="line"><span class="comment">--设置元表后不会修改元表值</span></span><br><span class="line"><span class="built_in">print</span>(monster.Hp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建new函数</span></span><br><span class="line">monster=&#123;</span><br><span class="line">    name=<span class="string">&quot;monster&quot;</span>,</span><br><span class="line">    Hp=<span class="number">100</span>,</span><br><span class="line">    x=<span class="number">1</span>,y=<span class="number">2</span>,</span><br><span class="line">    TakeDamage=<span class="function"><span class="keyword">function</span><span class="params">(self,damage)</span></span></span><br><span class="line">        <span class="built_in">self</span>.Hp=<span class="built_in">self</span>.Hp-damage</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    showInfo=<span class="function"><span class="keyword">function</span><span class="params">(self)</span></span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;name:&quot;</span>,<span class="built_in">self</span>.name,<span class="string">&quot;Hp:&quot;</span>,<span class="built_in">self</span>.Hp,<span class="built_in">self</span>.x,<span class="built_in">self</span>.y)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">monster:new</span><span class="params">(name,Hp,x,y )</span></span></span><br><span class="line">    <span class="keyword">local</span> aa = &#123;&#125;</span><br><span class="line">    <span class="built_in">setmetatable</span>(aa,&#123;<span class="built_in">__index</span>=monster&#125;)</span><br><span class="line">    aa.name=name</span><br><span class="line">    aa.Hp=Hp0<span class="number">.1</span>?.,m bcxzZ7</span><br><span class="line">    =-</span><br><span class="line">    aa.x=x</span><br><span class="line">    aa.y=y</span><br><span class="line">    <span class="keyword">return</span> aa</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> a=monster:new(<span class="string">&quot;aaa&quot;</span>,<span class="number">11</span>,<span class="number">222</span>,<span class="number">333</span>)</span><br><span class="line">a:showInfo()</span><br><span class="line">a:TakeDamage(<span class="number">100</span>)</span><br><span class="line">a:showInfo()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--设置直接调用table名执行的函数</span></span><br><span class="line">monster=&#123;</span><br><span class="line">    name=<span class="string">&quot;monster&quot;</span>,</span><br><span class="line">    Hp=<span class="number">100</span>,</span><br><span class="line">    x=<span class="number">1</span>,y=<span class="number">2</span>,</span><br><span class="line">    TakeDamage=<span class="function"><span class="keyword">function</span><span class="params">(self,damage)</span></span></span><br><span class="line">        <span class="built_in">self</span>.Hp=<span class="built_in">self</span>.Hp-damage</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">monster:showInfo</span><span class="params">()</span></span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;name:&quot;</span>,<span class="built_in">self</span>.name,<span class="string">&quot;Hp:&quot;</span>,<span class="built_in">self</span>.Hp,<span class="built_in">self</span>.x,<span class="built_in">self</span>.y)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">monster:new</span><span class="params">(name,Hp,x,y )</span></span></span><br><span class="line">    <span class="keyword">local</span> aa = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    aa.name=name</span><br><span class="line">    aa.Hp=Hp</span><br><span class="line">    aa.x=x</span><br><span class="line">    aa.y=y</span><br><span class="line">    <span class="built_in">setmetatable</span>(aa,&#123;<span class="built_in">__index</span>=monster&#125;)</span><br><span class="line">    <span class="keyword">return</span> aa</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--设置table的__call</span></span><br><span class="line"><span class="built_in">setmetatable</span>(monster,</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="built_in">__call</span>=</span><br><span class="line">    <span class="function"><span class="keyword">function</span><span class="params">(self,name,Hp,x,y )</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>:new(name,Hp,x,y)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">--直接调用函数</span></span><br><span class="line"><span class="keyword">local</span> a=monster(<span class="string">&quot;aaa&quot;</span>,<span class="number">11</span>,<span class="number">222</span>,<span class="number">333</span>)</span><br><span class="line">a:showInfo()</span><br><span class="line">a:TakeDamage(<span class="number">100</span>)</span><br><span class="line">a:showInfo()</span><br></pre></td></tr></table></figure><h1 id="实现私有成员"><a href="#实现私有成员" class="headerlink" title="实现私有成员"></a>实现私有成员</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--实现思路，在new的时候只把可以使用的接口开放出来</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="string">[[</span></span><br><span class="line"><span class="string">rawset (table, index, value)</span></span><br><span class="line"><span class="string">在不触发任何元方法的情况下 将 table[index] 设为 value。 table 必须是一张表， index 可以是 nil 与 NaN 之外的任何值。 value 可以是任何 Lua 值。</span></span><br><span class="line"><span class="string">这个函数返回 table。</span></span><br><span class="line"><span class="string">]]</span></span><br><span class="line">monster=&#123;</span><br><span class="line">    name=<span class="string">&quot;monster&quot;</span>,</span><br><span class="line">    Hp=<span class="number">100</span>,</span><br><span class="line">    x=<span class="number">1</span>,y=<span class="number">2</span>,</span><br><span class="line">    <span class="built_in">type</span>=<span class="string">&quot;monster&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">monster:GetHp</span><span class="params">( )</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>.Hp</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">monster:TakeDamage</span><span class="params">( damage )</span></span></span><br><span class="line">    <span class="built_in">self</span>.Hp=<span class="built_in">self</span>.Hp-damage</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">monster.new</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> obj=&#123;Hp=monster.Hp,y=monster.y,x=monster.x&#125;</span><br><span class="line">    <span class="built_in">setmetatable</span>(obj,monster)</span><br><span class="line">    monster.<span class="built_in">__index</span> = &#123;GetHp=monster.GetHp,TakeDamage=monster.TakeDamage&#125;</span><br><span class="line">    <span class="comment">--当使用没用定义的变量时调用__newindex，可用来实现标量</span></span><br><span class="line">    monster.<span class="built_in">__newindex</span>=<span class="function"><span class="keyword">function</span><span class="params">(tab,key,value)</span></span></span><br><span class="line">                            <span class="keyword">if</span> key==<span class="string">&quot;type&quot;</span> <span class="keyword">then</span></span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;not&quot;</span>)</span><br><span class="line">                            <span class="keyword">return</span></span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                        <span class="built_in">rawset</span>(tab,key,value)</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> x = monster.new()</span><br><span class="line"><span class="built_in">print</span>(x:GetHp())</span><br><span class="line">x.<span class="built_in">type</span>=<span class="string">&quot;fds&quot;</span></span><br><span class="line">x.hp=<span class="string">&quot;sdf&quot;</span></span><br><span class="line"><span class="built_in">print</span>(x.Hp)</span><br></pre></td></tr></table></figure><h1 id="闭包-1"><a href="#闭包-1" class="headerlink" title="闭包"></a>闭包</h1><p><a href="https://blog.csdn.net/u012861978/article/details/105796686?ops_request_misc=%7B%22request_id%22:%22167625967216782425647812%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167625967216782425647812&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-105796686-null-null.142%5Ev73%5Einsert_down1,201%5Ev4%5Eadd_ask,239%5Ev1%5Econtrol&utm_term=lua%E9%97%AD%E5%8C%85&spm=1018.2226.3001.4187">(47条消息) lua闭包_汪汪富贵的博客-CSDN博客</a></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--同一时间返回共用同一upvalue</span></span><br><span class="line"><span class="comment">--不同时间upvalue不同</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">( n )</span></span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span></span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">()</span></span></span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> a,b</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=c(<span class="number">10</span>)</span><br><span class="line">y=c(<span class="number">10</span>)</span><br><span class="line">x()</span><br><span class="line">y()</span><br><span class="line">x()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="lua" scheme="http://example.com/categories/lua/"/>
    
    
    <category term="lua" scheme="http://example.com/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>极世界-好友系统</title>
    <link href="http://example.com/2023/01/16/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%A5%BD%E5%8F%8B%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2023/01/16/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%A5%BD%E5%8F%8B%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-01-16T08:12:09.000Z</published>
    <updated>2023-03-09T04:44:44.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">好友添加流程：请求人添加好友，服务器向响应方发送请求消息，响应方发送响应信息，服务器根据响应信息向请求方和响应方添加信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;好友添加流程：请求人添加好友，服务器向响应方发送请求消息，响应方发送响应信息，服务器根据响应信息向请求方和响应方添加信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-刷怪系统</title>
    <link href="http://example.com/2023/01/13/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%88%B7%E6%80%AA%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2023/01/13/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%88%B7%E6%80%AA%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-01-13T03:27:36.000Z</published>
    <updated>2023-01-16T08:12:43.229Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">刷怪逻辑：</span><br><span class="line">地图创建刷怪管理，刷怪管理存储刷怪规则，刷怪规则每帧判断是否需要刷怪需要则，地图管理器刷怪，传递给地图通知地图中所有玩家</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;刷怪逻辑：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;地图创建刷怪管理，刷怪管理存储刷怪规则，刷怪规则每帧判断是否需要刷怪需要则，地图管理器刷怪，传递给地图通知地图中所有玩家&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-任务系统</title>
    <link href="http://example.com/2023/01/11/%E6%9E%81%E4%B8%96%E7%95%8C-%E4%BB%BB%E5%8A%A1%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2023/01/11/%E6%9E%81%E4%B8%96%E7%95%8C-%E4%BB%BB%E5%8A%A1%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-01-11T08:30:08.000Z</published>
    <updated>2023-01-13T03:26:48.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="/../images/image-20230113112519212.png" alt="image-20230113112519212"></p><p><img src="/../images/image-20230113112533890.png" alt="image-20230113112533890"></p><p><img src="/../images/image-20230113112546424.png" alt="image-20230113112546424"></p><p><img src="/../images/image-20230113112556148.png" alt="image-20230113112556148"></p><p><img src="/../images/image-20230113112606055.png" alt="image-20230113112606055"></p><p><img src="/../images/image-20230113112615013.png" alt="image-20230113112615013"></p><p><img src="/../images/image-20230113112624099.png" alt="image-20230113112624099"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-装备系统</title>
    <link href="http://example.com/2023/01/04/%E6%9E%81%E4%B8%96%E7%95%8C-%E8%A3%85%E5%A4%87%E7%B3%BB%E7%BB%9F-1/"/>
    <id>http://example.com/2023/01/04/%E6%9E%81%E4%B8%96%E7%95%8C-%E8%A3%85%E5%A4%87%E7%B3%BB%E7%BB%9F-1/</id>
    <published>2023-01-04T11:06:07.000Z</published>
    <updated>2023-01-04T11:06:07.269Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>极世界-装备系统</title>
    <link href="http://example.com/2023/01/03/%E6%9E%81%E4%B8%96%E7%95%8C-%E8%A3%85%E5%A4%87%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2023/01/03/%E6%9E%81%E4%B8%96%E7%95%8C-%E8%A3%85%E5%A4%87%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-01-03T03:33:05.000Z</published>
    <updated>2023-01-05T03:53:04.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">接口 IPointerClickHandler</span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="/../images/image-20230104190912135.png" alt="image-20230104190912135"></p><p><img src="/../images/image-20230104190925642.png" alt="image-20230104190925642"></p><p><img src="/../images/image-20230104190938466.png" alt="image-20230104190938466"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;接口 IPointerClickHandler&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-商店系统</title>
    <link href="http://example.com/2022/12/30/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%95%86%E5%BA%97%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/12/30/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%95%86%E5%BA%97%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-12-30T02:11:09.000Z</published>
    <updated>2023-01-03T03:36:41.243Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择时组件 Selectable</span><br><span class="line">当绑定组件后，继承 ISelectHandler 接口 实现 OnSelect函数，当选择时则执行此函数</span><br></pre></td></tr></table></figure><span id="more"></span><p><img src="/../images/image-20230103113612563.png" alt="image-20230103113612563"></p><p><img src="/../images/image-20230103113626905.png" alt="image-20230103113626905"></p><p><img src="/../images/image-20230103113635096.png" alt="image-20230103113635096"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;选择时组件 Selectable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当绑定组件后，继承 ISelectHandler 接口 实现 OnSelect函数，当选择时则执行此函数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-背包系统</title>
    <link href="http://example.com/2022/12/28/%E6%9E%81%E4%B8%96%E7%95%8C-%E8%83%8C%E5%8C%85%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/12/28/%E6%9E%81%E4%B8%96%E7%95%8C-%E8%83%8C%E5%8C%85%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-12-28T02:14:02.000Z</published>
    <updated>2022-12-29T04:47:06.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">数据库用二进制存储</span><br><span class="line"></span><br><span class="line">更新协议 更新Define 制作背包UI 背包小格子脚本 背包数据库建立</span><br><span class="line"></span><br><span class="line">bagitem使用结构体，为了方便进行交换</span><br><span class="line"></span><br><span class="line">背包作用</span><br><span class="line">背包系统组成</span><br><span class="line"></span><br><span class="line">[StructLayout(LayoutKind.Sequential, Pack =1)]解释</span><br><span class="line"></span><br><span class="line">GetComponentsInChildren(); 使用方法</span><br><span class="line"></span><br><span class="line">通过二进制存储数据</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="背包作用"><a href="#背包作用" class="headerlink" title="背包作用"></a>背包作用</h1><p><img src="/../images/image-20221228162200670.png" alt="image-20221228162200670"></p><h1 id="背包系统组成"><a href="#背包系统组成" class="headerlink" title="背包系统组成"></a>背包系统组成</h1><p><img src="/../images/image-20221228162225821.png" alt="image-20221228162225821"></p><h1 id="StructLayout-LayoutKind-Sequential-Pack-x3D-1-解释"><a href="#StructLayout-LayoutKind-Sequential-Pack-x3D-1-解释" class="headerlink" title="[StructLayout(LayoutKind.Sequential, Pack &#x3D;1)]解释"></a>[StructLayout(LayoutKind.Sequential, Pack &#x3D;1)]解释</h1><p><code>[StructLayout(LayoutKind.Sequential)]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">结构体是由若干成员组成的.布局有两种</span><br><span class="line">1.Sequential,顺序布局,比如</span><br><span class="line">struct S1</span><br><span class="line">&#123;</span><br><span class="line">  int a;</span><br><span class="line">  int b;</span><br><span class="line">&#125;</span><br><span class="line">那么默认情况下在内存里是先排a,再排b</span><br><span class="line">也就是如果能取到a的地址,和b的地址,则相差一个int类型的长度,4字节</span><br><span class="line">[StructLayout(LayoutKind.Sequential)] </span><br><span class="line">struct S1</span><br><span class="line">&#123;</span><br><span class="line">  int a;</span><br><span class="line">  int b;</span><br><span class="line">&#125;</span><br><span class="line">这样和上一个是一样的.因为默认的内存排列就是Sequential,也就是按成员的先后顺序排列.</span><br><span class="line">2.Explicit,精确布局</span><br><span class="line">需要用FieldOffset()设置每个成员的位置</span><br><span class="line">这样就可以实现类似c的公用体的功能</span><br><span class="line">[StructLayout(LayoutKind.Explicit)] </span><br><span class="line">struct S1</span><br><span class="line">&#123;</span><br><span class="line">  [FieldOffset(0)]</span><br><span class="line">  int a;</span><br><span class="line">  [FieldOffset(0)]</span><br><span class="line">  int b;</span><br><span class="line">&#125;</span><br><span class="line">这样a和b在内存中地址相同</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">StructLayout特性支持三种附加字段：CharSet、Pack、Size。     </span><br></pre></td></tr></table></figure><p>·  CharSet定义在结构中的字符串成员在结构被传给DLL时的排列方式。可以是Unicode、Ansi或Auto。<br> 默认为Auto，在WIN  NT&#x2F;2000&#x2F;XP中表示字符串按照Unicode字符串进行排列，在WIN  95&#x2F;98&#x2F;Me中则表示按照ANSI字符串进行排列。<br>·  Pack定义了结构的封装大小。可以是1、2、4、8、16、32、64、128或特殊值0。特殊值0表示当前操作平台默认的压缩大小。   </p><h1 id="c-GetComponentsInChildren-lt-组件-gt"><a href="#c-GetComponentsInChildren-lt-组件-gt" class="headerlink" title="c# GetComponentsInChildren&lt;组件&gt;();"></a>c# <code>GetComponentsInChildren</code>&lt;组件&gt;();</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c# GetComponentsInChildren&lt;组件&gt;();</span><br><span class="line">这种方式是 大家经常用到的，这种是获取自己和它的孩子有同样的组件（比如 Rigidbody），返回一个数组，数组包括自己和它的孩子。如果他的孩子里面有的是不活跃SetActive(false);则获取不到。</span><br><span class="line">所以就会有第二个参数GetComponentsInChildren&lt;组件&gt;(true);</span><br><span class="line"></span><br><span class="line">includeInactive =true;</span><br><span class="line">原文链接：https://blog.csdn.net/microsoftMSDNNET/article/details/48522817</span><br></pre></td></tr></table></figure><h1 id="通过二进制存储数据"><a href="#通过二进制存储数据" class="headerlink" title="通过二进制存储数据"></a>通过二进制存储数据</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 分析获取背包</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;data&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">unsafe</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Analyze</span>(<span class="params"><span class="built_in">byte</span>[] data</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">fixed</span> (<span class="built_in">byte</span>* pt = data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.Unlocked;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            BagItem* item = (BagItem*)(pt + (i * <span class="keyword">sizeof</span>(BagItem)));</span><br><span class="line">            <span class="keyword">this</span>.items[i] = *item;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsafe</span> <span class="keyword">public</span> NBagInfo <span class="title">GetBagInfo</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.LogError(<span class="string">&quot;BagManager-&gt;NBagInfo&quot;</span>);</span><br><span class="line">    <span class="keyword">fixed</span> (<span class="built_in">byte</span>* pt = info.Items)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.Unlocked; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            BagItem* item = (BagItem*)(pt + (i * <span class="keyword">sizeof</span>(BagItem)));</span><br><span class="line">            *item = items[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;数据库用二进制存储&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更新协议 更新Define 制作背包UI 背包小格子脚本 背包数据库建立&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bagitem使用结构体，为了方便进行交换&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;背包作用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;背包系统组成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[StructLayout(LayoutKind.Sequential, Pack =1)]解释&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GetComponentsInChildren(); 使用方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;通过二进制存储数据&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-道具系统</title>
    <link href="http://example.com/2022/12/21/%E6%9E%81%E4%B8%96%E7%95%8C-%E9%81%93%E5%85%B7%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/12/21/%E6%9E%81%E4%B8%96%E7%95%8C-%E9%81%93%E5%85%B7%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-12-21T14:25:18.000Z</published>
    <updated>2022-12-22T15:37:52.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">道具分类</span><br><span class="line">道具系统对外接口</span><br><span class="line">道具系统组成</span><br><span class="line"></span><br><span class="line">更新协议：道具类型，角色道具信息，登录时返回角色信息（包含道具）</span><br><span class="line">建立道具表数据库 角色与道具一对多 道具包含ID 数量</span><br><span class="line"></span><br><span class="line">服务端：道具管理器，道具实体类</span><br><span class="line">item:物品的增加删除和使用</span><br><span class="line">itemManager：物品所有者，物品列表，物品使用，是否持有物品，物品获取，物品添加，物品移除，获取物品列表</span><br><span class="line"></span><br><span class="line">DBservice:数据库保存</span><br><span class="line">Character：创建ItemManager，将道具读入Manager</span><br><span class="line"></span><br><span class="line">UserSerevice-角色进入：将角色信息填入</span><br><span class="line"></span><br><span class="line">客户端：item实体，itemManager</span><br><span class="line">item实体：存放 ID，数量</span><br><span class="line">ItemManager：Item字典，初始化Item，获取配置表中信息，使用逻辑</span><br><span class="line"></span><br><span class="line">UserSerevice：角色进入初始化道具表管理器</span><br><span class="line"></span><br><span class="line">道具实体类存在的意义：为了避免频繁操作数据库，登录时将道具信息拉出，之后操作本地数据，需要更新时更新数据库</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;道具分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;道具系统对外接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;道具系统组成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更新协议：道具类型，角色道具信息，登录时返回角色信息（包含道具）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;建立道具表数据库 角色与道具一对多 道具包含ID 数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;服务端：道具管理器，道具实体类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;item:物品的增加删除和使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;itemManager：物品所有者，物品列表，物品使用，是否持有物品，物品获取，物品添加，物品移除，获取物品列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DBservice:数据库保存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Character：创建ItemManager，将道具读入Manager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UserSerevice-角色进入：将角色信息填入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;客户端：item实体，itemManager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;item实体：存放 ID，数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ItemManager：Item字典，初始化Item，获取配置表中信息，使用逻辑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UserSerevice：角色进入初始化道具表管理器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;道具实体类存在的意义：为了避免频繁操作数据库，登录时将道具信息拉出，之后操作本地数据，需要更新时更新数据库&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-NPC系统</title>
    <link href="http://example.com/2022/12/20/%E6%9E%81%E4%B8%96%E7%95%8C-NPC%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/12/20/%E6%9E%81%E4%B8%96%E7%95%8C-NPC%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-12-20T12:30:01.000Z</published>
    <updated>2022-12-21T09:28:08.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">NPC分类</span><br><span class="line">NPC系统设计</span><br><span class="line">点击场景中的对象 OnMouseDown</span><br><span class="line">OnMouseDown 点击脚本GameObject碰撞体时触发</span><br><span class="line">NpcManager 管理NPC数据，功能事件</span><br><span class="line">NpcController 管理Npc的实体动作等</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><p><img src="/../images/image-20221220203332499.png" alt="image-20221220203332499"></p><h1 id="NPC分类"><a href="#NPC分类" class="headerlink" title="NPC分类"></a>NPC分类</h1><p><img src="/../images/image-20221220203051502.png" alt="image-20221220203051502"></p><h1 id="NPC系统设计"><a href="#NPC系统设计" class="headerlink" title="NPC系统设计"></a>NPC系统设计</h1><p><img src="/../images/image-20221220203139722.png" alt="image-20221220203139722"></p><h1 id="新增配置表"><a href="#新增配置表" class="headerlink" title="新增配置表"></a>新增配置表</h1><p>自动赋值json  编辑这个</p><p><img src="/../images/image-20221220205825505.png" alt="image-20221220205825505"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NPC分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NPC系统设计&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;点击场景中的对象 OnMouseDown&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OnMouseDown 点击脚本GameObject碰撞体时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NpcManager 管理NPC数据，功能事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NpcController 管理Npc的实体动作等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-UI系统框架设计</title>
    <link href="http://example.com/2022/12/19/%E6%9E%81%E4%B8%96%E7%95%8C-UI%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2022/12/19/%E6%9E%81%E4%B8%96%E7%95%8C-UI%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/</id>
    <published>2022-12-19T11:52:30.000Z</published>
    <updated>2022-12-21T04:37:21.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">直接断开连接玩家不退出</span><br><span class="line">mono单例当父对象被销毁的，子对象也会被销毁</span><br><span class="line"></span><br><span class="line">Type 类</span><br><span class="line">C# default(T)关键字</span><br><span class="line">加载游戏资源</span><br><span class="line"></span><br><span class="line">UIManager  UI的资源拉取，创建，销毁</span><br><span class="line">UIWindow   UI的父类，定义UI的关闭事件，UI的按钮关闭事件</span><br><span class="line">UIMain     UI管理的表层</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="直接断开连接玩家不退出"><a href="#直接断开连接玩家不退出" class="headerlink" title="直接断开连接玩家不退出"></a>直接断开连接玩家不退出</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在玩家断开连接信息发出时发送角色离开请求</span><br></pre></td></tr></table></figure><p><img src="/../images/image-20221219212108086.png" alt="image-20221219212108086"></p><p><img src="/../images/image-20221219212052895.png" alt="image-20221219212052895"></p><h1 id="Type-类"><a href="#Type-类" class="headerlink" title="Type 类"></a>Type 类</h1><pre><code>Type类，用来包含类型的特性。对于程序中的每一个类型，都会有一个包含这个类型的信息的Type类的对象，类型信息包含数据，属性和方法等信息。</code></pre><p>1.生成Type对象<br>      有两种方法可以生成Type类的对象：一种是Typeof(类名)，一种是对象调用GetType()函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Type type = typeof(Person);</span><br><span class="line"></span><br><span class="line"> Person person = new Person();</span><br><span class="line"> Type type2 = person.GetType();</span><br></pre></td></tr></table></figure><p>2.获取类的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//类的名称    </span><br><span class="line">string name = type.Name;           </span><br><span class="line">//类的命名空间</span><br><span class="line">string space = type.Namespace;</span><br><span class="line">//类的程序集</span><br><span class="line">Assembly assembly = type.Assembly;</span><br><span class="line">//类的共有字段</span><br><span class="line">FieldInfo[] fieldInfos = type.GetFields();</span><br><span class="line">//类的属性</span><br><span class="line">PropertyInfo[] propertyInfos = type.GetProperties();</span><br><span class="line">//类的方法</span><br><span class="line">MethodInfo[] methodInfos = type.GetMethods();</span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/liyazhen2011/article/details/81105717">https://blog.csdn.net/liyazhen2011/article/details/81105717</a></p><h1 id="C-default-T-关键字"><a href="#C-default-T-关键字" class="headerlink" title="C# default(T)关键字"></a>C# default(T)关键字</h1><p>C#中的关键词default函数，其作用是default(T)返回一个该类型T的默认值，一般情况下用于在不知道类型参数具体为值类型还是引用类型的情况下，为对象实例赋于初值。<br><strong>切记：在 C# 中不允许使用未初始化的变量。</strong></p><h1 id="加载游戏资源"><a href="#加载游戏资源" class="headerlink" title="加载游戏资源"></a>加载游戏资源</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载Resources目录下的预设体</span></span><br><span class="line">Resources.Load(info.Resources);</span><br><span class="line"><span class="comment">//加载某种类型的资源</span></span><br><span class="line">Resloader.Load&lt;Sprite&gt;(<span class="string">&quot;UI/Minimap/&quot;</span> + User.Instance.CurrentMapData.MiniMap);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;直接断开连接玩家不退出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mono单例当父对象被销毁的，子对象也会被销毁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type 类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C# default(T)关键字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;加载游戏资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIManager  UI的资源拉取，创建，销毁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIWindow   UI的父类，定义UI的关闭事件，UI的按钮关闭事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIMain     UI管理的表层&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-地图传送</title>
    <link href="http://example.com/2022/12/18/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%9C%B0%E5%9B%BE%E4%BC%A0%E9%80%81/"/>
    <id>http://example.com/2022/12/18/%E6%9E%81%E4%B8%96%E7%95%8C-%E5%9C%B0%E5%9B%BE%E4%BC%A0%E9%80%81/</id>
    <published>2022-12-18T14:10:59.000Z</published>
    <updated>2022-12-19T11:53:00.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建传送点</span><br><span class="line">传送点配置</span><br><span class="line">编辑器扩展：传送点数据生成</span><br><span class="line">传送协议与实现</span><br><span class="line">地图传送服务流程</span><br><span class="line"></span><br><span class="line">碰撞 触发失效解决</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="编辑器扩展：传送点数据生成"><a href="#编辑器扩展：传送点数据生成" class="headerlink" title="编辑器扩展：传送点数据生成"></a>编辑器扩展：传送点数据生成</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在配置表里生成传送点位置</span><br><span class="line">使用完成后生成到客户端配置表中，需复制到服务端</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"><span class="keyword">using</span> UnityEditor.SceneManagement;</span><br><span class="line"><span class="keyword">using</span> Common.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MapTools</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">[<span class="meta">MenuItem(<span class="string">&quot;Map Tools/Export Teleporters&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ExportTeleporters</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        DataManager.Instance.Load();</span><br><span class="line"></span><br><span class="line">        Scene scene = EditorSceneManager.GetActiveScene();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> currentScene = scene.name;</span><br><span class="line">        <span class="keyword">if</span>(scene.isDirty)</span><br><span class="line">        &#123;</span><br><span class="line">            EditorUtility.DisplayDialog(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;请先保存当前场景&quot;</span>, <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;TeleportObject&gt; allteleportObjects = <span class="keyword">new</span> List&lt;TeleportObject&gt;();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">var</span> map <span class="keyword">in</span> DataManager.Instance.Maps)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取地图所在位置</span></span><br><span class="line">            <span class="built_in">string</span> sceneFile = <span class="string">&quot;Assets/Scenes/&quot;</span> + map.Value.Resource + <span class="string">&quot;.unity&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!System.IO.File.Exists(sceneFile))</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogErrorFormat(<span class="string">&quot;Scene :&#123;0&#125; not existed!&quot;</span>, sceneFile);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            EditorSceneManager.OpenScene(sceneFile, OpenSceneMode.Single);</span><br><span class="line"></span><br><span class="line">            TeleportObject[] teleports = FindObjectsOfType&lt;TeleportObject&gt;();</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">var</span> teleporter <span class="keyword">in</span> teleports)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(!DataManager.Instance.Teleporters.ContainsKey(teleporter.ID))</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorUtility.DisplayDialog(<span class="string">&quot;错误&quot;</span>,</span><br><span class="line">                        <span class="built_in">string</span>.Format(<span class="string">&quot;地图：&#123;0&#125;中配置的 TeleportID：&#123;1&#125;不存在！&quot;</span>, map.Value.ID, teleporter.ID),</span><br><span class="line">                        <span class="string">&quot; 确定&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                TeleporterDefine teleporter_Define = DataManager.Instance.Teleporters[teleporter.ID];</span><br><span class="line">                <span class="keyword">if</span>(teleporter_Define.MapID!=map.Value.ID)</span><br><span class="line">                &#123;</span><br><span class="line">                    EditorUtility.DisplayDialog(<span class="string">&quot;错误&quot;</span>,</span><br><span class="line">                        <span class="built_in">string</span>.Format(<span class="string">&quot;地图：&#123;0&#125;中不应存在的 TeleportID：&#123;1&#125;！&quot;</span>, map.Value.ID, teleporter.ID),</span><br><span class="line">                          <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                teleporter_Define.Position = GameObjectTool.WorldToLogicN(teleporter.transform.position);</span><br><span class="line">                teleporter_Define.Direction = GameObjectTool.WorldToLogicN(teleporter.transform.forward);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DataManager.Instance.SaveTeleporters();</span><br><span class="line">        EditorSceneManager.OpenScene(<span class="string">&quot;Assets/Scenes/&quot;</span> + currentScene + <span class="string">&quot;.unity&quot;</span>);</span><br><span class="line">        EditorUtility.DisplayDialog(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;传送点导出完毕&quot;</span>, <span class="string">&quot;确定&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="传送点配置"><a href="#传送点配置" class="headerlink" title="传送点配置"></a>传送点配置</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Common.Data;</span><br><span class="line"><span class="keyword">using</span> Services;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TeleportObject</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> ID;</span><br><span class="line">    Mesh mesh = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> ()</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.mesh = <span class="keyword">this</span>.GetComponent&lt;MeshFilter&gt;().sharedMesh;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> ()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.LogError(<span class="string">&quot;触发进行&quot;</span>);</span><br><span class="line">        PlayerInputController playerInputController = other.GetComponent&lt;PlayerInputController&gt;();</span><br><span class="line">        <span class="keyword">if</span>(playerInputController!=<span class="literal">null</span>&amp;&amp;playerInputController.isActiveAndEnabled)</span><br><span class="line">        &#123;</span><br><span class="line">            TeleporterDefine td = DataManager.Instance.Teleporters[<span class="keyword">this</span>.ID];</span><br><span class="line">            <span class="keyword">if</span>(td==<span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogErrorFormat(<span class="string">&quot;TeleportObject :Character:&#123;0&#125; Enter Teleporter&#123;1&#125; But not existed&quot;</span></span><br><span class="line">                    , playerInputController.character.Info.Name,<span class="keyword">this</span>.ID);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Debug.LogFormat(<span class="string">&quot;TeleportObject :Character:&#123;0&#125; Enter Teleporter&#123;1&#125; &quot;</span></span><br><span class="line">                    , playerInputController.character.Info.Name, <span class="keyword">this</span>.ID);</span><br><span class="line">            <span class="keyword">if</span>(td.LinkTo&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (DataManager.Instance.Teleporters.ContainsKey(td.LinkTo))</span><br><span class="line">                &#123;</span><br><span class="line">                    MapService.Instance.SendMapTeleport(<span class="keyword">this</span>.ID);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> Debug.LogErrorFormat(<span class="string">&quot;Teleporter ID:&#123;0&#125; LinkID:&#123;1&#125; Error&quot;</span>, <span class="keyword">this</span>.ID, td.LinkTo);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> UNITY_EDITOR</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.blue;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.mesh!=<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Gizmos.DrawWireMesh(<span class="keyword">this</span>.mesh, </span><br><span class="line">                <span class="keyword">this</span>.transform.position + Vector3.up * <span class="keyword">this</span>.transform.localPosition.y * <span class="number">.5</span>f, </span><br><span class="line">                <span class="keyword">this</span>.transform.rotation, <span class="keyword">this</span>.transform.localScale);</span><br><span class="line">        &#125;</span><br><span class="line">        UnityEditor.Handles.color = Color.red;</span><br><span class="line">        UnityEditor.Handles.ArrowHandleCap(<span class="number">0</span>, <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation, <span class="number">1f</span>, EventType.Repaint);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="地图传送服务流程"><a href="#地图传送服务流程" class="headerlink" title="地图传送服务流程"></a>地图传送服务流程</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">玩家进入传送区域-&gt;发送传送请求-&gt;服务端响应传送请求：玩家离开旧地图，进入新地图，修改玩家位置-&gt;客户端响应玩家进入离开地图</span><br></pre></td></tr></table></figure><h1 id="碰撞-触发失效解决"><a href="#碰撞-触发失效解决" class="headerlink" title="碰撞 触发失效解决"></a>碰撞 触发失效解决</h1><p><img src="/../images/image-20221219135706570.png" alt="image-20221219135706570"></p><p><img src="/../images/image-20221219135714843.png" alt="image-20221219135714843"></p><p>全勾上</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;创建传送点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;传送点配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;编辑器扩展：传送点数据生成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;传送协议与实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;地图传送服务流程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;碰撞 触发失效解决&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-移动同步3</title>
    <link href="http://example.com/2022/12/17/%E6%9E%81%E4%B8%96%E7%95%8C-%E7%A7%BB%E5%8A%A8%E5%90%8C%E6%AD%A53/"/>
    <id>http://example.com/2022/12/17/%E6%9E%81%E4%B8%96%E7%95%8C-%E7%A7%BB%E5%8A%A8%E5%90%8C%E6%AD%A53/</id>
    <published>2022-12-17T09:06:12.000Z</published>
    <updated>2022-12-18T14:12:00.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-移动同步2</title>
    <link href="http://example.com/2022/12/16/%E6%9E%81%E4%B8%96%E7%95%8C-%E7%A7%BB%E5%8A%A8%E5%90%8C%E6%AD%A52/"/>
    <id>http://example.com/2022/12/16/%E6%9E%81%E4%B8%96%E7%95%8C-%E7%A7%BB%E5%8A%A8%E5%90%8C%E6%AD%A52/</id>
    <published>2022-12-16T02:26:54.000Z</published>
    <updated>2022-12-17T09:07:03.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">同步的目标对象</span><br><span class="line">同步的流程</span><br><span class="line"></span><br><span class="line">EntitySync协议</span><br><span class="line">EntitySync的影响和发送</span><br><span class="line"></span><br><span class="line">客户端 CharacterManager Id Info.id</span><br><span class="line">服务端地图 CharacterID EntityId</span><br><span class="line">服务端 CharacterManager Id Info.id</span><br><span class="line"></span><br><span class="line">同步步骤 </span><br><span class="line">客户端状态更新-&gt;玩家控制器发送同步请求-&gt; 服务端地图服务接受同步请求-&gt;地图管理器处理请求-&gt;发送请求的是本连接 同步不是本连接-&gt;向客户端发送同步请求-&gt;客户端处理同步-&gt;客户端EntityManager修改同步的属性</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="同步的流程"><a href="#同步的流程" class="headerlink" title="同步的流程"></a>同步的流程<img src="/../images/image-20221216112633439.png" alt="image-20221216112633439"></h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;同步的目标对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;同步的流程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EntitySync协议&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EntitySync的影响和发送&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;客户端 CharacterManager Id Info.id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;服务端地图 CharacterID EntityId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;服务端 CharacterManager Id Info.id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;同步步骤 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;客户端状态更新-&amp;gt;玩家控制器发送同步请求-&amp;gt; 服务端地图服务接受同步请求-&amp;gt;地图管理器处理请求-&amp;gt;发送请求的是本连接 同步不是本连接-&amp;gt;向客户端发送同步请求-&amp;gt;客户端处理同步-&amp;gt;客户端EntityManager修改同步的属性&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>极世界-移动同步1</title>
    <link href="http://example.com/2022/12/14/%E6%9E%81%E4%B8%96%E7%95%8C-%E7%A7%BB%E5%8A%A8%E5%90%8C%E6%AD%A51/"/>
    <id>http://example.com/2022/12/14/%E6%9E%81%E4%B8%96%E7%95%8C-%E7%A7%BB%E5%8A%A8%E5%90%8C%E6%AD%A51/</id>
    <published>2022-12-14T12:19:14.000Z</published>
    <updated>2022-12-15T15:37:51.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">帧同步</span><br><span class="line">状态同步</span><br><span class="line">状态帧同步</span><br><span class="line">完善角色进入及离开处理</span><br><span class="line"></span><br><span class="line">CharacterManager（C/S）</span><br><span class="line">EntityManager（C/S）</span><br><span class="line">打包运行Win客户端</span><br><span class="line"></span><br><span class="line">遇到问题 ：返回角色选择后再次进入游戏，小地图角色transformm为null</span><br><span class="line">解决 ：角色创建为携程创建，创建完一个角色后就执行了小地图的start，导致User的角色gameobject未赋值就使用，在User中创建事件即可</span><br><span class="line"></span><br><span class="line">Mono单例需要使用重载的start等回调函数</span><br><span class="line">游戏对象管理器 使用事件时， +=  -=</span><br><span class="line"></span><br><span class="line">ID类型</span><br><span class="line"></span><br><span class="line">DB_id，Entity_ID，Tid，ID</span><br><span class="line"></span><br><span class="line">将创建角色和销毁角色 使用的ID转为Entiy_Id;</span><br><span class="line"></span><br><span class="line">Entity中的删除通知： 在EntittController中实现接口，并将接口函数添加到字典中，角色需要删除血量条等</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="帧同步"><a href="#帧同步" class="headerlink" title="帧同步"></a>帧同步</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>由于不同的系统对浮点数的处理方式不同，导致在客户端进行处理时出现不同的结果</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><img src="/../images/image-20221214204024923.png" alt="image-20221214204024923"></p><p><img src="/../images/image-20221214204034956.png" alt="image-20221214204034956"></p><h1 id="状态同步"><a href="#状态同步" class="headerlink" title="状态同步"></a>状态同步</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>只有状态数据改变时才进行同步</p><h2 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h2><p><img src="/../images/image-20221214204123586.png" alt="image-20221214204123586"></p><h1 id="状态帧同步"><a href="#状态帧同步" class="headerlink" title="状态帧同步"></a>状态帧同步</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>按固定的逻辑帧搜集变化的状态数据并进行网络同步</p><h2 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h2><p><img src="/../images/image-20221214204049216.png" alt="image-20221214204049216"></p><p><img src="/../images/image-20221215161643638.png" alt="image-20221215161643638"></p><p><img src="/../images/image-20221215164053593.png" alt="image-20221215164053593"></p><p>玩家进入： 客户端 UserService 发送玩家进入请求 服务端 响应，将进入的角色加入玩家管理器中 </p><p>并加入相应地图中，地图存储进入此地图的玩家，玩家进入时，通知此地图其他所有玩家新玩家进入地图</p><p>遍历创建角色，</p><h1 id="打包运行Win客户端"><a href="#打包运行Win客户端" class="headerlink" title="打包运行Win客户端"></a>打包运行Win客户端</h1><p>将 log4net.xml 文件放到打包到的目录下</p><p>将存放数据的Data目录放到打包文件下</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;帧同步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;状态同步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;状态帧同步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;完善角色进入及离开处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CharacterManager（C/S）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EntityManager（C/S）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打包运行Win客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;遇到问题 ：返回角色选择后再次进入游戏，小地图角色transformm为null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;解决 ：角色创建为携程创建，创建完一个角色后就执行了小地图的start，导致User的角色gameobject未赋值就使用，在User中创建事件即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mono单例需要使用重载的start等回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;游戏对象管理器 使用事件时， +=  -=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ID类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DB_id，Entity_ID，Tid，ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将创建角色和销毁角色 使用的ID转为Entiy_Id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Entity中的删除通知： 在EntittController中实现接口，并将接口函数添加到字典中，角色需要删除血量条等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="unity" scheme="http://example.com/categories/unity/"/>
    
    
    <category term="极世界" scheme="http://example.com/tags/%E6%9E%81%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
</feed>
